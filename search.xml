<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>电脑越来越慢？电脑垃圾很多却不想下载流氓垃圾清理软件？此文章可能可以帮助到你！</title>
    <url>/2021/09/09/albs/</url>
    <content><![CDATA[<p>电脑使用久了之后，你会发现电脑速度变得越来越慢，不管是进入系统或是开启软件，这时候就会怀疑系统是不是中毒了？或是隐藏了木马程式？防毒软件扫了一轮，也找不到原因，这是什么原因呢？  </p>
<p>除了升级电脑硬件或重灌Windows系统，你也可以使用AusLogics BoostSpeed软件，帮电脑把把脉，看看到底是哪里出了问题。  </p>
<p>AusLogics BoostSpeed可说是最强大的专业系统优化软件之一，提供超多功能，例如：加速电脑效能、清理垃圾和重复的档案、修复错误的注册表（Registry）、深度清理硬碟、移除软体、开机设定、电脑硬体资讯、监控系统等都有。基本上，可说是所有关于系统方面的功能，靠这套软体就够了。  </p>
<p>此软件有付费版和免费版，小编认为免费版就已经够用了没必要用付费版  </p>
<h1>软件简介</h1>
  
<table>
<thead>
<tr>
<th align="center">列表</th>
<th align="center">简介</th>
</tr>
</thead>
<tbody><tr>
<td align="center">名称</td>
<td align="center">AusLogicsBoostSpeed</td>
</tr>
<tr>
<td align="center">操作系统</td>
<td align="center">Windows系统</td>
</tr>
<tr>
<td align="center">系统要求</td>
<td align="center">Windows7以上</td>
</tr>
<tr>
<td align="center">语言</td>
<td align="center">英文、德文、法文、意大利文、日文、西班牙文和俄罗斯文</td>
</tr>
<tr>
<td align="center">官网</td>
<td align="center"><a href="https://bit.ly/3cCn8Bc">https://bit.ly/3cCn8Bc</a></td>
</tr>
</tbody></table>
<h1>使用方法</h1>
<hr>
<h2>步骤一</h2>
进入网站后，点选“Free Download”进行下载。
<br>
<img src="https://www.chinapress.com.my/wp-content/uploads/2021/04/AusLogics-BoostSpeed01-183314.jpg" width="650">
<br>
<h2>步骤二</h2>
<br>
下载完成后，对著已下载的exe档案连续按两下滑鼠左键，准备安装。
<img src="https://www.chinapress.com.my/wp-content/uploads/2021/04/AusLogics-BoostSpeed02-183413.jpg" width="450">
<br>
<h2>步骤三</h2>
<br>
点击“Agree and install”进行安装。
<img src="https://www.chinapress.com.my/wp-content/uploads/2021/04/AusLogics-BoostSpeed03-183440.jpg" width="650">
<br>
<h2>步骤四</h2>
<br>
点击“Finish”，离开安装程式并直接执行AusLogics BoostSpeed软件。
<img src="https://www.chinapress.com.my/wp-content/uploads/2021/04/AusLogics-BoostSpeed04-183513.jpg" width="650">
<br>
<h2>步骤五</h2>
<br>
进入系统主画面，预设在“My Dashboard”的页面，点击“Scan”开始进行Windows系统扫描。
<img src="https://www.chinapress.com.my/wp-content/uploads/2021/04/AusLogics-BoostSpeed05-183629.jpg" width="650">
<br>
扫描时间长短，是根据你的电脑状况与选择扫描的项目而定，所以每台电脑的速度会有所不同，等待的时间也会不一样。
<br>
<img src="https://www.chinapress.com.my/wp-content/uploads/2021/04/AusLogics-BoostSpeed06-183641.jpg" width="650">
<br>
扫描完毕，AusLogics BoostSpeed会告诉你多少项目需要修复及多少空间将会被释放出来。你只需按“Resolve All”开始进行修复。
<br>
<img src="https://www.chinapress.com.my/wp-content/uploads/2021/04/AusLogics-BoostSpeed07-183722.jpg" width="650">
<br>
如果遇到一些项目需要重开机才能完成，你只需根据软件给的指示即可。如果没有出现重开机提示，那么你只需要点击“Resolve All”进行修复。
<br>
<img src="https://www.chinapress.com.my/wp-content/uploads/2021/04/AusLogics-BoostSpeed08-183754.jpg" width="650">
<img src="https://www.chinapress.com.my/wp-content/uploads/2021/04/AusLogics-BoostSpeed09-183905.jpg" width="650">
修复完毕后，会出现一个清单，让你清楚的知道已经清除了多少空间、修复了多少项目等讯息。
<br>
<img src="https://www.chinapress.com.my/wp-content/uploads/2021/04/AusLogics-BoostSpeed10-183912.jpg" width="650">
<br>
所有的工具都会在“All Tools”里，可以自行选择要执行的单个选项。
<br>
<img src="https://www.chinapress.com.my/wp-content/uploads/2021/04/AusLogics-BoostSpeed11-183944.jpg" width="650">
<br>
<hr>
文章就到此结束，如果要投稿或者有什么问题可以联系我。我的telegram可以在友链里找到，谢谢
<br>
<hr>
图片来自于网络，若有侵权请联系我，我会将图片替换成我的图片。
<hr>

]]></content>
      <tags>
        <tag>软件</tag>
        <tag>Windows</tag>
        <tag>推荐</tag>
        <tag>IT</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>【Telegram机器人】如何简单制作一个群管理机器人</title>
    <url>/2021/09/07/groupmagrbot/</url>
    <content><![CDATA[<p>我就不废话了，就直接开始吧  </p>
<h1>第一步</h1>
***
首先申请一个机器人  

<p>先联系<a href="https://t.me/BotFather">BotFather</a>机器人,向机器人输入 /newbot，这里就输入你要取的机器人名字。<br>接种输入机器人的username (像：“cycxtIT_bot”)<br>之后就会出现一下画面：</p>
<img src="https://img13.360buyimg.com/ddimg/jfs/t1/203770/2/5354/72945/6137367cEa063daaf/576368e21b580ea1.jpg" width="500">

<p>如果像途中显示：</p>
<p><code>Sorry, this username is already taken. Please try something different.</code></p>
<p>就表示这个用户名已经被人使用了，需要重新输入一个用户名</p>
<p><strong>注意：</strong> 这里用户名后面要有bot  </p>
<p>此时botfather会发送一个机器人的token（类似一下的文字）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Done! Congratulations on your new bot. You will find it at t.me/cycxyITbot. You can now add a description, about section and profile picture for your bot, see /help for a list of commands. By the way, when you&#x27;ve finished creating your cool bot, ping our Bot Support if you want a better username for it. Just make sure the bot is fully operational before you do this.</span><br><span class="line"></span><br><span class="line">Use this token to access the HTTP API:</span><br><span class="line">1990228030:AAERQb70do7uO91i0W4W5EFBKBTFE8UCRiU</span><br><span class="line">Keep your token secure and store it safely, it can be used by anyone to control your bot.</span><br><span class="line"></span><br><span class="line">For a description of the Bot API, see this page: https://core.telegram.org/bots/api</span><br></pre></td></tr></table></figure>

<h1>第二步</h1>
***
联系[Group Help Bot](https://t.me/GroupHelpOfficialCloneBot)机器人  
把刚刚BotFather发送的TOKEN发送给GroupHelp机器人，**注意：不能把token复制给Grouphelp机器人，请转发botfather所发的token
最后结果会是这样：  
<img src="https://img12.360buyimg.com/ddimg/jfs/t1/77500/15/16992/433426/61373a7dE01f464d4/a3ca161def7f97a4.png" width="500">  

<h1>第三步</h1>
***
私聊向你刚刚创建好的的机器人发送/start（按开始）  
成功了就会向图中的样子
<img src="https://img14.360buyimg.com/ddimg/jfs/t1/76288/26/16176/499158/61373b9cEac9bb6cb/1d64063016a469c6.png" width="500">
有回应就表示成功了，你可以加此机器人进群（要设为管理员）  
最后在群组发送 `/config` 或者 `/settings` 
然后可以选择在私聊设置还是在群组设置，其实都一样，没差别  

<p>文章就到此结束有什么问题可以在友链找到我的电报账号，私聊我就行了</p>
]]></content>
      <tags>
        <tag>IT</tag>
        <tag>Telegram 教程</tag>
        <tag>Telegram 机器人</tag>
        <tag>电报</tag>
        <tag>机器人</tag>
        <tag>群管理</tag>
        <tag>随手笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows远程代码执行漏洞修复（9.9.2021）</title>
    <url>/2021/09/09/micbug/</url>
    <content><![CDATA[<p>近日，微软官方发布编号为 <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444">CVE-2021-40444</a> 的 MSHTML  远程代码执行漏洞通告，根据 <a href="https://www.first.org/cvss/calculator/3.0">CVSS v3.0</a> 将其评为 8.8/7.9（Base Score/Temporal Score），属于严重漏洞。  </p>
<p>该漏洞可被未经身份验证的攻击者利用在目标系统上远程执行代码。<br>微软表示已经发现攻击者利用此漏洞在 Office 文档中添加恶意 ActiveX 控件，以此来诱导目标用户打开恶意文档。<br>影响范围包括 Windows 7/8/8.1/10 以及 Windows Server 2008/2008R2/2012/2012R2/2016/2019/2022 等各个版本。   </p>
<p>目前微软暂未发布相关补丁修复漏洞，并称在完成此次漏洞调查后，微软将采取适当的行动来帮助保护用户。   这可能包括发布月度安全更新，或根据客户需求提供周期外的安全更新。  </p>
<p>对于用户当前的应对措施，微软称 Microsoft Defender Antivirus 和 Microsoft Defender for Endpoint   都已提供对已知漏洞的检测和保护，请用户保持相关产品的更新，已使用自动更新的客户不需要采取额外的行动。  </p>
<p>对于其他用户，微软给出临时缓解措施：在 Internet Explorer 中禁用所有 ActiveX 控件的安装，可以减缓此次漏洞攻击。操作如下：  </p>
<ol>
<li>将以下代码复制到文本文件，并以 .reg 文件扩展名保存：  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\0]</span><br><span class="line">&quot;1001&quot;=dword:00000003</span><br><span class="line">&quot;1004&quot;=dword:00000003</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\1]</span><br><span class="line">&quot;1001&quot;=dword:00000003</span><br><span class="line">&quot;1004&quot;=dword:00000003</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\2]</span><br><span class="line">&quot;1001&quot;=dword:00000003</span><br><span class="line">&quot;1004&quot;=dword:00000003</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\3]</span><br><span class="line">&quot;1001&quot;=dword:00000003</span><br><span class="line">&quot;1004&quot;=dword:00000003</span><br></pre></td></tr></table></figure></li>
<li>双击该 .reg 文件。  </li>
<li>重启系统。  <hr>
此文章为转载，源文本来自：TGgeek，TG极客  
<hr></li>
</ol>
]]></content>
      <tags>
        <tag>Windows</tag>
        <tag>IT</tag>
        <tag>漏洞</tag>
        <tag>微软</tag>
      </tags>
  </entry>
  <entry>
    <title>【资讯】微软砍掉了帐户密码，从此登录再也无需密码了</title>
    <url>/2021/09/20/microsoftpw/</url>
    <content><![CDATA[<p>你可曾想过，预防密码泄漏的终极大招，居然是取消密码。不过逻辑的确很流畅：防止密码泄漏 &gt; 删除密码 &gt; 密码永远不会泄漏。<br>“无密码”是下一代帐户安全性。 简单。 快。 安全。<br>上面这句话，是微软在介绍无密码帐户时使用的标题，似乎…不太好理解。</p>
<p>不过对于一直在使用 Microsoft Authenticator 的小编来说，的确非常喜欢 Microsoft Authenticator 的设定，每当需要登录的时候，手机上的 Microsoft Authenticator 就会发出通知，让你选择跟屏幕上相同的数字，就能完成登录，并不需要输入密码：</p>
<img src="https://img3.appinn.net/images/202109/img_43a392cb0d17-1.jpg" width="550">
<img src="https://img3.appinn.net/images/202109/screen-appinn2021-09-17_12_33_51.jpg" width="550">
但，真的可以删除密码吗？

<p>注意这里的删除密码，是指从你的帐户中彻底删除密码，从此该微软帐户将无密码，并再也不能通过密码登录。</p>
<p>于是就有了一堆疑问，但实际上小编还没有删除密码，只能转一下“无密码”是下一代帐户安全性。 简单。 快。 安全。这个页面的内容吧：</p>
<p>如果我的帐户没有密码，如何登录？</p>
<p>从帐户中删除密码后，将需要使用无密码方法（如 Microsoft Authenticator 应用、Windows Hello、物理安全密钥或短信代码）登录。</p>
<p>我的帐户安全吗？</p>
<p>是！ 使用替代登录方法（Microsoft Authenticator应用、物理安全密钥和生物识别）比可能会被盗、被盗或猜出的传统密码更安全。 </p>
<p>如何删除密码<br>删除密码之前，需要下载并安装Microsoft Authenticator应用。 我们还建议所有设备具有最新的软件更新。</p>
<p>我已设置我的 Microsoft Authenticator 应用<br>登录到 Microsoft 帐户 “其他安全选项”。<br>在”无密码帐户”下，选择“打开”。<br>按照提示验证帐户。<br>批准发送到应用Microsoft Authenticator请求。<br>我需要设置 Microsoft Authenticator 应用<br>转到<a href="https://aka.ms/Authapp%E5%BA%94%E7%94%A8%EF%BC%8C%E6%88%96%E8%BD%AC%E5%88%B0">https://aka.ms/Authapp应用，或转到</a> App Store 或 Play Store 下载并安装Microsoft Authenticator应用。<br>获取 Microsoft Authenticator 应用<br>打开Authenticator应用，然后按照提示在应用中设置帐户。<br>登录到 Microsoft 帐户 “其他安全选项”。<br>在”无密码帐户”下，选择“打开”。<br>按照提示验证帐户。<br>批准发送到应用Microsoft Authenticator请求。<br>常见问题<br>“无密码”是什么意思？<br>“无密码”是指删除密码，改为使用无密码方法登录。 </p>
<p>无密码解决方案（例如 Windows Hello、Microsoft Authenticator应用、短信或电子邮件代码以及物理安全密钥）提供了更安全、更方便的登录方法。 </p>
<p>虽然密码可能会被猜出、被盗或钓鱼，但只有你才能提供指纹身份验证，或在适当的时间在移动设备上提供正确的响应。</p>
<p>为什么我看不到此功能？<br>我们将在过去几个月向个人帐户客户推出此功能。 请尽快返回查看！ </p>
<p>如果使用工作或学校帐户登录Microsoft 服务，则不支持删除密码。 了解更多信息。</p>
<p>如果我失去对应用的访问权限Microsoft Authenticator会发生什么？<br>如果无法访问 Microsoft Authenticator 应用，仍可以使用备用恢复方法（如短信或备份电子邮件地址）访问Microsoft帐户。 如果已 打开“两步验证”，则需要具有两种恢复方法的访问权限。</p>
<p>能否将密码添加回我的帐户？<br>是的，请按照以下步骤操作。</p>
<p>登录到 Microsoft 帐户“其他安全选项”。<br>在”无密码帐户”下，选择“关闭”，然后选择“下一步”。<br>按照提示将密码添加回帐户。<br>无密码帐户是否可处理所有应用和服务？<br>不需要。 某些较旧版本的Windows、应用和服务仍然需要密码。 如果使用以下任一项，请继续使用密码：</p>
<p>Xbox 360<br>Office 2010 或更早版本<br>Office for Mac 2011 或更早版本<br>使用 IMAP 和 POP 电子邮件服务的产品和服务<br>Windows 8.1，Windows 7 或更早版本<br>一些 Windows 包括远程桌面和凭据管理器在内的功能<br>某些命令行和任务计划程序服务。<br>是否仍然需要应用密码？<br>可以。 启用双步验证并启用无密码后，某些应用或较旧的设备 (包括 Outlook 2010、Xbox 360 和发送邮件设备（如安全摄像头) ）都需要应用密码。 了解有关应用密码的详细信息。</p>
<p>创建应用密码</p>
<p>我能否在没有密码的情况下登录 Xbox？<br>Xbox One 和 Xbox Series X/S：是<br>Xbox 360：否<br>若要使用无密码身份验证，请执行：</p>
<p>选择 “使用另一台设备”，microsoft.com 浏览器上的”设备”链接。<br>输入主机上提供的代码，然后使用无密码方法登录。<br>在哪里可以发送反馈？<br>感谢你成为新一代在线安全性的一部分。 请在 上发布任何answers.microsoft.com</p>
<p>对于到底要不要删除密码，你觉得呢？</p>
]]></content>
      <tags>
        <tag>Windows</tag>
        <tag>IT</tag>
        <tag>微软</tag>
        <tag>密码</tag>
        <tag>资讯</tag>
      </tags>
  </entry>
  <entry>
    <title>【接上期的群管理机器人】 其他指令</title>
    <url>/2021/09/09/ngbt/</url>
    <content><![CDATA[<p>此文章将链接至上期<a href="https://cycxtit.github.io/2021/09/07/%E2%80%9C%E3%80%90Telegram%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%91%E5%A6%82%E4%BD%95%E7%AE%80%E5%8D%95%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E7%BE%A4%E7%AE%A1%E7%90%86%E6%9C%BA%E5%99%A8%E4%BA%BA%E2%80%9D/">群组管理机器人</a></p>
<p>/ban 将用户从群组中封锁，且不给他通过群组链接重新加入的可能性</p>
<p>/mute 允许用户在群组中阅读但不能发送消息</p>
<p>/kick 将用户从群组中封锁，但可以通过群组链接重新加入</p>
<p>/unban 用于被封锁的用户，使他可以通过群组链接重新加入</p>
<p>/info 显示所选用户的所有信息</p>
<p>/staff 显示群组干部的完整名单</p>
<p>👮🏻管理员和裁判员可用<br>🕵🏻管理员可用</p>
<p>👮🏻 /reload 更新管理员名单和他们的权限</p>
<p>🕵🏻 /settings 管理群组的所有机器人设置</p>
<p>👮🏻  /ban 从群组封锁用户使其不能从群组链接再次进入群组</p>
<p>👮🏻  /mute 把用户设为只读模式。他能读但是不能发任何消息</p>
<p>👮🏻  /kick 从群组封锁用户，但其能通过群组链接重新进入群组</p>
<p>👮🏻  /unban 从群组的屏蔽列表移除用户，使其能通过群组链接重新进入群组</p>
<p>👮🏻  /info 查询用户的信息<br>👮🏻  /infopvt 和 /info 一样，但是信息将发送到私聊</p>
<p>◽️ /staff 查询完整的群组干部名单要查看指令的用法示例</p>
<p>🕵🏻管理员可用<br>👮🏻管理员和裁判员可用<br>🛃管理员和删帖员可用</p>
<p>警告管理<br>👮🏻  /warn 给用户添加一个警告<br>👮🏻  /unwarn 给用户移除一个警告<br>👮🏻  /warns 查看和管理用户的警告<br>🕵🏻  /delwarn 删除消息并给用户添加一个警告</p>
<p>🛃 /del 删除选择的消息<br>🛃 /logdel 删除选择的消息并将其发送至日志频道</p>
<p>◽️ /me 私聊发送他自己的信息、群组信息、警告次数、群组规则、违禁词列表…</p>
<p>🕵🏻 /send 通过机器人能够使用 <strong>HTML</strong>在群组中发送帖子<br>  ➡️示例： /send 你好世界！</p>
<p>👮🏻  /intervention 可请求官方机器人成员的干预，他会尽快加入群组</p>
<p>👥所有用户可用<br>👮🏻管理员和裁判员可用<br>🕵🏻管理员可用</p>
<p>👥 /geturl 用此指令回复某条消息，你可以收到直接指向该消息的链接。仅在有公开用户名的超级群组中有效。</p>
<p>🕵🏻 /inactives [天数] 私聊发送在过去 [天数] 内没有发过消息的用户名单，以便处罚他们。</p>
<p>置顶消息<br>🕵🏻 /pin [消息] 通过机器人发送消息并置顶。<br>🕵🏻 /pin 置顶回复的消息。<br>🕵🏻 /editpin [消息] 编辑当前置顶的消息（如果是从机器人发出的话）。<br>🕵🏻 /delpin 移除置顶消息。<br>🕵🏻 /repin 移除并重新置顶当前的置顶消息，并发送通知提醒！<br>👥 /pinned 指向当前的置顶消息。</p>
<p>🕵🏻  /list 私聊发送带有消息数量统计的群组用户名单。<br>🕵🏻 /list roles 私聊发送分配给用户的特殊角色名单。</p>
<p>🕵🏻  /graphic 发送一个展示群组成员趋势的图表。<br>🕵🏻  /trend 发送群组的增长统计数据</p>
]]></content>
      <tags>
        <tag>IT</tag>
        <tag>Telegram</tag>
        <tag>Telegram机器人</tag>
      </tags>
  </entry>
  <entry>
    <title>键盘记录仪</title>
    <url>/2021/09/09/pyhk-1/</url>
    <content><![CDATA[<p>今天呢就分享一个用Python写的键盘记录器,记录我们所敲击的按键值,当我们攻破一台电脑,可以运行这个脚本,记录服务端管理人员的键盘操作.用下面代码需要安装Python-Xlib库,我用atp-get和pip安装都没有成功,后直接下载python-xlib-0.15rc1源码才安装成功.  </p>
<p><a href="http://download.csdn.net/detail/qq_21792169/9708593">python-xlib-0.15rc1下载地址</a></p>
<p>sudo python setup.py install进行安装  </p>
<p>代码中分别写了三个平台的,有linux,Mac,windos.下面文章将描述linux平台的代码.  </p>
<p>我们进入linux目录,运行python keylogger.py  就可以记录按键值,修改keylogger.py中的log_file路径制定我们要保存的按键值的文件路径.按grave键来退出程序,也就是ESC下面的那个键.  </p>
<h2>键盘记录仪部分</h2>
<hr>
下载地址：

<p><code>https://github.com/cycxtIT/python-keylogger/tree/main</code></p>
<hr>
<h2>Pyxhook部分</h2>
<hr> 
下载地址：

<p><code>https://github.com/cycxtIT/python-keylogger/tree/main</code></p>
<hr>
<p><strong>注意：此文章作为参考，请不要用于非法活动</strong></p>
<hr>
<p><code>由于这里不能放出代码所以只能给下载地址，若有不便请原谅</code>  </p>
<hr>
<p>如果有任何问题可以联系我Telegram，我的Telegram地址可以在友链里找到。</p>
]]></content>
      <tags>
        <tag>IT</tag>
        <tag>黑客</tag>
        <tag>Python</tag>
        <tag>代码</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Telegram代理（8/9/2021）</title>
    <url>/2021/09/08/tgagent/</url>
    <content><![CDATA[<p>使用方法：<br>一、如果  TG一键链接  上方有  认证地址  请先打开 认证地址（请用您连接TG代理的IP打开认证地址）<br>二、打开  认证地址  后显示  Added successfully  或者  already added  即可使用代理<br>三、更新telegram客户端至最新版<br>四、允许IPv6连接(如果没有该选项请放弃）<br>五、家庭宽带一般自带IPv6，不需要手动开启，如果没有，请检查路由器是否支持IPv6，如果不支持，请向运营商申请。</p>
<span id="more"></span>
<p>六、有无IPv6可通过 <a href="https://www.test-ipv6.com/">https://www.test-ipv6.com/</a> 判断<br>七、由于目前节点负载极低，非常欢迎分享代理给您的朋友！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">认证地址：http://aws-jp-1.nwyxcnsyty.live/add.php</span><br><span class="line">TG一键链接: https://t.me/proxy?server=aws-jp-1.nwyxcnsyty.live&amp;port=443&amp;secret=eea809abed962f47d99c5f5a7c5a5868eb6177732e616d617a6f6e2e636f6d</span><br><span class="line"></span><br><span class="line">认证地址：http://aws-jp-2.nwyxcnsyty.live/add.php</span><br><span class="line">TG一键链接: https://t.me/proxy?server=aws-jp-2.nwyxcnsyty.live&amp;port=443&amp;secret=eea809abed962f47d99c5f5a7c5a5868eb6177732e616d617a6f6e2e636f6d</span><br><span class="line"></span><br><span class="line">认证地址：http://aws-jp-3.nwyxcnsyty.live/add.php</span><br><span class="line">TG一键链接: https://t.me/proxy?server=aws-jp-3.nwyxcnsyty.live&amp;port=443&amp;secret=eea809abed962f47d99c5f5a7c5a5868eb6177732e616d617a6f6e2e636f6d</span><br><span class="line"></span><br><span class="line">认证地址：http://aws-jp-4.nwyxcnsyty.live/add.php</span><br><span class="line">TG一键链接: https://t.me/proxy?server=aws-jp-4.nwyxcnsyty.live&amp;port=443&amp;secret=eea809abed962f47d99c5f5a7c5a5868eb6177732e616d617a6f6e2e636f6d</span><br></pre></td></tr></table></figure>

<p>有什么问题可以联系<a href="https://cycxtit.github.io/friends/">程源</a> (点击作者的Telegram即可)</p>
]]></content>
      <tags>
        <tag>IT</tag>
        <tag>Telegram</tag>
        <tag>节点</tag>
        <tag>Telegram代理</tag>
      </tags>
  </entry>
  <entry>
    <title>【Telegram机器人】今天教大家如何用编程语言制作电报机器人</title>
    <url>/2021/09/19/tgbot1/</url>
    <content><![CDATA[<p>今天只讲Python编程语言搭建电报机器人而已，至于用Google Script搭建的教程<a href="https://byn6.github.io/2021/07/20/tg-bc/">点击这里</a><br>至于如何搭建telegram机器人<a href="https://cycxtit.github.io/2021/09/07/groupmagrbot/">请参考这篇文章</a>的<code>步骤一</code><br><br></p>
<h2>Python</h2>
<hr>
<h3>步骤一</h3>
先到python官网安装python环境，在安装是记得吧PATH打开如图
<img src="https://pic2.zhimg.com/80/v2-11ea2a5ea3f1c77ae0f535a3ea3e6f59_720w.jpg" width="600">  

<p>接着安装Telepot：在电脑的终端（cmd）输入以下代码  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install telepot</span><br></pre></td></tr></table></figure>
<h2>步骤二（可以跳过）</h2>
安装Python ILDE，如`PyCharm` `Visual Studio Code` `Sublime Text`等  
<h2>步骤三</h2>

<p><strong>1.1 测试你的bot账户</strong></p>
<p>你可以在python中输入如下语句来获取你的bot信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import telepot #将telepot这个模组导入到Python中来</span><br><span class="line">&gt;&gt;&gt; bot = telepot.Bot(&#x27;***** Your Token *****&#x27;) #将bot这个在程序中使用的variable和你的bot token联系起来，在之后的程序中，每当要命令bot的时候可以直接call bot的instance</span><br><span class="line">&gt;&gt;&gt; bot.getMe() #getMe()是一个获取bot信息的function</span><br><span class="line">&#123;&#x27;first_name&#x27;: &#x27;Jean&#x27;, &#x27;username&#x27;: &#x27;MonsieurMadeleine&#x27;, &#x27;id&#x27;: 24601&#125; #在这里你的bot的信息将以一个dictionary的形式被print出来</span><br></pre></td></tr></table></figure>
<br>

<p><strong>1.2 接收消息</strong><br>设计上，telegram bot是无法主动向用户发送消息的（主要的目的是防止spam)，所以你需要主动地通过指令以获取用户的信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; from pprint import pprint</span><br><span class="line">&gt;&gt;&gt; response = bot.getUpdates()</span><br><span class="line">&gt;&gt;&gt; pprint(response)</span><br><span class="line">[&#123;&#x27;message&#x27;: &#123;&#x27;chat&#x27;: &#123;&#x27;first_name&#x27;: &#x27;Jean&#x27;,</span><br><span class="line">                       &#x27;id&#x27;: 24601,</span><br><span class="line">                       &#x27;type&#x27;: &#x27;private&#x27;&#125;,</span><br><span class="line">              &#x27;date&#x27;: 1564897562,</span><br><span class="line">              &#x27;from&#x27;: &#123;&#x27;first_name&#x27;: &#x27;Jean&#x27;, &#x27;id&#x27;: 24601&#125;,</span><br><span class="line">              &#x27;message_id&#x27;: 104152,</span><br><span class="line">              &#x27;text&#x27;: &#x27;I&#x27;m a stronger man by far!&#x27;&#125;,</span><br><span class="line">  &#x27;update_id&#x27;: 100000000&#125;]</span><br></pre></td></tr></table></figure>

<p>pprint 指pretty print，是python自带的一个可以让打印出来的dictionary更美观的一个function</p>
<p>getUpdates()是telegram中获取Update的方法，依据Telegram API，getUpdate会return一个以Update object组成的array。在python中，Update object是以dictionary的形式被表现出来的。</p>
<p>每当有用户向你的bot发送一条消息/图片/指令的时候，你都可以通过getUpdate()的方式来获取这条消息。在这条消息中，message 的key包括chat(用户的名字，ID和聊天的种类（在telegram中，聊天的种类分为三种，private, group以及channel，我们更多地是handle private的信息)），date（消息发送的日期），from（发送者的信息），message_id（一个独特的，message_id可以specify某一条信息），而text就是用户所发送消息的文本。</p>
<p>但是每次都使用getUpdate()来获取消息就太麻烦了，这意味着你需要连续不断地敲击运行按钮才能获取新用户发送给bot的消息，在这里telepot提供了一个非常方便的解决办法.  </p>
<p><strong>1.3 持续地接受消息</strong><br>在telepot中，MessageLoop是一个非常方便的处理信息的方式，如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; from telepot.loop import MessageLoop #导入MessageLoop</span><br><span class="line">&gt;&gt;&gt; def handle(msg): #在这里定义handle来告诉MessageLoop应该如何处理Message</span><br><span class="line">...     pprint(msg)  #simply print message</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt; MessageLoop(bot, handle).run_as_thread()</span><br></pre></td></tr></table></figure>
<p>MessageLoop需要两个argument，一个是你已经specify token的’bot’，而另一个就是告诉MessageLoop如何处理信息的’method’（在这里我们将它命名为handle，你可以将此method改成任意名字，只要在定义的时候，method只接收一个argument，那就是’msg’）。</p>
<p>‘run_as_thread’在这里起到了，只要你启动了你的python file，那么这个MessageLoop就会永续不断地运行下去，除非遇到特殊情况（冲突或者恶性bug等等）</p>
<p>1.4 快速的Glance Message<br>telegram中的message作为一个json object，其中包含很多重要的而且可能会在一次Bot与用户的交互中多次使用的信息，而每次通过message对应的key来访问这些信息实在是有够麻烦，对此telepot提供了glance这一功能来快速获取message中的某些重要信息。</p>
<p>content_type, chat_type, chat_id = telepot.glance(msg)<br>在这条语句之后，telepot帮你快速查看了msg中的content type, chat type和chat id并且储存在了这三个variable中，在之后的代码里可以直接通过这些variable来访问相对应的信息。</p>
<p>Tip:glance的功能不限于只获取这三种信息（content type, chat type和chat id）而是所有在message中存在的legal key中的信息都可以获取。  </p>
<p><strong>1.5 向用户发送信息</strong><br>在telepot中，向用户发送信息这一功能是通过bot.sendMessage() 这一function实现的，sendMessage() take in 两个arguments，一个是你希望发送的用户的chat_id，另一个是你希望发送消息的文本。<br><code>bot.sendMessage(chat_id, text)</code><br>到这里你已经掌握了搭建一个bot的所有基本操作，让我们来尝试做一个非常简单的bot吧。<br><br></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import time</span><br><span class="line">import telepot</span><br><span class="line">from telepot.loop import MessageLoop</span><br><span class="line"></span><br><span class="line">def handle(msg):</span><br><span class="line">    content_type, chat_type, chat_id = telepot.glance(msg)</span><br><span class="line">    print(content_type, chat_type, chat_id)</span><br><span class="line"></span><br><span class="line">    if msg[&#x27;text&#x27;] == &#x27;/start&#x27;:</span><br><span class="line">        bot.sendMessage(chat_id, &#x27;你好&#x27;)</span><br><span class="line">    elif msg[&#x27;text&#x27;] == &#x27;/test&#x27;:</span><br><span class="line">        bot.sendMessage(chat_id, &#x27;回应测试&#x27;)</span><br><span class="line"></span><br><span class="line">TOKEN = &#x27;Your Token&#x27;</span><br><span class="line"></span><br><span class="line">bot = telepot.Bot(TOKEN)</span><br><span class="line">MessageLoop(bot, handle).run_as_thread()</span><br><span class="line">print (&#x27;Listening ...&#x27;)</span><br><span class="line"></span><br><span class="line"># Keep the program running.</span><br><span class="line">while 1:</span><br><span class="line">    time.sleep(10)</span><br></pre></td></tr></table></figure>

<p><em><em>记得把Your Token换成你机器人的token哦~</em></em>  </p>
<h4>Inline Keybord</h4>

<p>代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import time</span><br><span class="line">import telepot</span><br><span class="line">from telepot.loop import MessageLoop</span><br><span class="line">from telepot.namedtuple import InlineKeyboardMarkup, InlineKeyboardButton</span><br><span class="line"></span><br><span class="line">def on_chat_message(msg):</span><br><span class="line">    content_type, chat_type, chat_id = telepot.glance(msg)</span><br><span class="line"></span><br><span class="line">    keyboard = InlineKeyboardMarkup(inline_keyboard=[</span><br><span class="line">                   [InlineKeyboardButton(text=&#x27;McFlurry&#x27;, callback_data=&#x27;McFlurry&#x27;)],</span><br><span class="line">                   [InlineKeyboardButton(text=&#x27;Nugget&#x27;, callback_data=&#x27;Nugget&#x27;)],</span><br><span class="line">                   [InlineKeyboardButton(text=&#x27;Coke&#x27;, callback_data=&#x27;Coke&#x27;)],</span><br><span class="line">                   [InlineKeyboardButton(text=&#x27;Coke&#x27;, callback_data=&#x27;Coke&#x27;)],</span><br><span class="line">               ])</span><br><span class="line"></span><br><span class="line">    bot.sendMessage(chat_id, &#x27;What would you like to order?&#x27;, reply_markup=keyboard)</span><br><span class="line"></span><br><span class="line">def on_callback_query(msg):</span><br><span class="line">    query_id, from_id, query_data = telepot.glance(msg, flavor=&#x27;callback_query&#x27;)</span><br><span class="line">    bot.answerCallbackQuery(query_id, text=&#x27;Sold out!&#x27;)</span><br><span class="line">    bot.answerCallbackQuery(query_id, text=&#x27;You have ordered&#x27;+query_data)</span><br><span class="line"></span><br><span class="line">TOKEN = &#x27;Your Token&#x27;</span><br><span class="line">bot = telepot.Bot(TOKEN)</span><br><span class="line">MessageLoop(bot, &#123;&#x27;chat&#x27;: on_chat_message,</span><br><span class="line">                  &#x27;callback_query&#x27;: on_callback_query&#125;).run_as_thread()</span><br><span class="line">print(&#x27;Listening ...&#x27;)</span><br><span class="line"></span><br><span class="line">while 1:</span><br><span class="line">    time.sleep(10)</span><br></pre></td></tr></table></figure>

<p>效果：  </p>
<img src="https://pic4.zhimg.com/80/v2-889116441bcf2ba2c0ec66b1eaa6f68f_720w.jpg" width="600">  

<hr>

<p>有什么问题可以在评论区问我或者电报联系我</p>
<hr>
文章部分来自于<a href="https://zhuanlan.zhihu.com/p/30450761">知乎</a>和<a href="https://google.com/">谷歌</a>
<hr>
至于nodejs的就明天写吧！]]></content>
      <tags>
        <tag>IT</tag>
        <tag>Telegram</tag>
        <tag>Telegram机器人</tag>
        <tag>Python</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>美国v2ray/vmess节点（8.9.2021）</title>
    <url>/2021/09/08/usv2/</url>
    <content><![CDATA[<p>维加斯服务器，加拿大的IP，无限流量，流媒体解锁，解锁美区流媒体，双IP机制，<br>目前支持（US）美国的NF，谷歌，油管，Tiktok，迪士尼，hulu，HBO等……</p>
<p>节点：  </p>
<p>美国维加斯-自定义免流</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vmess://eyJhZGQiOiIxOTkuMTkuMjI2LjE2MSIsImFpZCI6IjY0IiwiaG9zdCI6InB1bGwuZnJlZS52aWRlby4xMDAxMC5jb20iLCJpZCI6IjczMmFkYTkwLTNhZDEtNDViZC1iZDM3LWZiNWZlMWI5MDA3YyIsIm5ldCI6IndzIiwicGF0aCI6Ii8iLCJwb3J0IjoiODAiLCJwcyI6Iue+juWbvee7tOWKoOaWry3oh6rlrprkuYnlhY3mtYEiLCJzY3kiOiJhdXRvIiwic25pIjoiIiwidGxzIjoiIiwidHlwZSI6IiIsInYiOiIyIn0=</span><br></pre></td></tr></table></figure>
<hr>
<p>美国圣何塞-自定义免流</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vmess://eyJhZGQiOiIxOTguMTIuMTIwLjIzMiIsImFpZCI6IjY0IiwiaG9zdCI6InB1bGwuZnJlZS52aWRlby4xMDAxMC5jb20iLCJpZCI6IjczMmFkYTkwLTNhZDEtNDViZC1iZDM3LWZiNWZlMWI5MDA3YyIsIm5ldCI6IndzIiwicGF0aCI6Ii8iLCJwb3J0IjoiODAiLCJwcyI6Iue+juWbveWco+S9leWhni3oh6rlrprkuYnlhY3mtYEiLCJzY3kiOiJhdXRvIiwic25pIjoiIiwidGxzIjoiIiwidHlwZSI6IiIsInYiOiIyIn0=</span><br></pre></td></tr></table></figure>
<hr>
<p>美国西雅图-自定义免流</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vmess://eyJhZGQiOiIyMy45NS4yNTQuMTY3IiwiYWlkIjoiNjQiLCJob3N0IjoicHVsbC5mcmVlLnZpZGVvLjEwMDEwLmNvbSIsImlkIjoiNzMyYWRhOTAtM2FkMS00NWJkLWJkMzctZmI1ZmUxYjkwMDdjIiwibmV0Ijoid3MiLCJwYXRoIjoiLyIsInBvcnQiOiI4MCIsInBzIjoi576O5Zu96KW/6ZuF5Zu+LeiHquWumuS5ieWFjea1gSIsInNjeSI6ImF1dG8iLCJzbmkiOiIiLCJ0bHMiOiIiLCJ0eXBlIjoiIiwidiI6IjIifQ==</span><br></pre></td></tr></table></figure>
<hr>
<p>如果以上的节点都不能用的话，请联系作者telegram进行更新，谢谢  </p>
<p>作者的telegram在友链可以获取。</p>
]]></content>
      <tags>
        <tag>IT</tag>
        <tag>节点</tag>
        <tag>v2ray</tag>
        <tag>vmess</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows快捷键</title>
    <url>/2021/09/26/kjj/</url>
    <content><![CDATA[<p>标准计算机键盘共104键，除了26个字母键、符号键、数字键外，其余按键功能如下：</p>
<p>Windows快捷键大全主键盘区：<br>Esc 键：escape，退出键。<br>Tab 键：tabulator key，跳格键，在文本编辑软件中增加四个空格，Windows中可用于切换屏幕上的焦点。<br>Ctrl 键：control，控制键。<br>Shift 键：上档键。<br>Alt 键：换档键。<br>Caps Lock 键：大写锁定键，用于切换系统大写锁定。<br>Windows 键：键盘上画着一个Windows视窗图标的键。按这个键可以打开开始菜单。<br>BackSpace 键：退格键，用于删除当前光标前的字符；退格键 在Win资源管理器后退；打开、另存为界面表示返回上级。<br>Enter键：回车键，换行，在Windows资源管理器表示打开文件（夹）或选中菜单选项；在Cmd[DOS Mode]表执行命令。<br>Space：空格键 如果活动选项是单选或复选框，则选中或清除框中的√</p>
<p>Windows快捷键大全功能键区：<br>F1 帮助<br>F2 重命名、部分主板开机时的BIOS快捷键<br>F3 查找<br>F4 地址栏<br>F5 刷新<br>F6 切换（到地址栏）<br>F9 部分主板开机引导<br>F7、8 自定义<br>F10 + Shift或Alt 右键菜单<br>F11全屏<br>F12 部分主板开机引导</p>
<p>Windows快捷键大全系统键区：<br>PrintScreen键：印屏幕。按下该键后系统会自动全屏截图并保存至剪切板中（无任何提示可Ctrl+V贴至画图、QQ、Word等，BIOS中截的图可以在Windows等OS中查看），配合Alt键使用可以截取当前焦点所在的活动窗口。<br>ScrollLock键：滚动条锁定键，配合ScrollLock指示灯来控制和显示当前滚动条锁定状态。常见的软件中只有Excel支持此功能，使用频率极低。<br>Pause|Break键：暂停/中断键。当需要查看主板自检信息时，可以在自检时按下该键，自检结束后将不会自动进入下一步启动过程，而是等待用户操作。VBS（按键精灵等）、VBA编程中为暂停脚本。</p>
<p>Windows快捷键大全编辑键区：<br>Insert键：插入/改写键。使用该键可以切换当前文本输入状态是插入状态还是改写状态。Word、写字板、记事本等文字处理和某些程序编译器支持该功能。<br>Delete键：删除键，文本编辑可以删除光标后而不是前的字符，文件浏览可以删除选中的文件。部分主板通过该键进入BIOS。<br>Delete+Shift删除被选中的项目，如果是文件，将被直接删除而不是放入回收站<br>Home键：起始键，用于将光标移至行开头。浏览网页时，可以返回网页最上端。<br>End键：结尾键，用于将光标移至结尾。浏览网页时，可以将页面滚至最下方。<br>Page Up键：向上翻页键。<br>PageDown键：向下翻页键。</p>
<p>Windows快捷键大全数字键盘区：<br>NumLock键：数字锁定键，与NumLock指示灯对应，按下该键可以控制NumLock指示灯的状态。当NumLock指示灯点亮时，小键盘区用于输入数字；当NumLock指示灯熄灭时，小键盘区可代替编辑键区使用。</p>
<p>Windows快捷键大全107键键盘附加按键：<br>WakeUp键：唤醒键<br>Sleep键：睡眠键<br>Power键：电源键</p>
<p>Windows快捷键大全Fn在Win中<br>F1 显示帮助。<br>F2 重命名。<br>F3 焦点在桌面时打开“查找：所有文件” 对话框（WIN10不适用）；Win资源管理器中切至搜索栏。<br>F4+Alt关闭窗口【焦点在桌面时是关机界面，在网页则关闭当前标签或浏览器】。<br>F5 刷新。<br>F6切换。焦点切到任务栏或活动窗口中的地址栏。F6或TAB键在左右窗格、地址栏、搜索栏、间切换<br>F10+Shift =Alt+F10 Application键激活当前焦点的右键菜单。（word中Shift+F10出现右键快捷菜单）<br>F11全屏、Esc退出。【Windows Explorer（即“计算机”点开的窗口，下简称Win资源管理器）是隐藏地址栏和树状图；网页隐藏搜索、收藏、插件、侧边、状态栏；媒体播放界面同理】<br>F12在Excel 或Word文档是另存为；网页页面是打开调试环境（审查元素）。</p>
<p>Windows快捷键大全Up、Down、Left、Right 方向键<br>方向键本键如果活动选项是选项按钮或文件则为移动焦点；<br>方向键 + Win键（简称Win键）使窗口全屏、最小化、靠左半边、靠右半边（部分版本不支持）；<br>方向键+Shift键将连续的文字或文件选中<br>方向键（左右）+Ctrl键 在英文单词或中文词语间跳跃<br>方向键（上下）+Ctrl键 在段落开头间跳跃</p>
<p>Windows快捷键大全Ctrl键</p>
<p>Windows快捷键大全系统类<br>Ctrl+Alt+Delete打开安全选项（XP及以下为任务管理器，DOS系统中为重启）<br>Ctrl+Shift+Esc打开任务管理器 （Win9x中打开开始菜单）<br>Ctrl+Shift+N 新建一个新的文件夹（Win XP不适用）<br>Ctrl+Shift切换中英文输入法。<br>Ctrl+Space（空格）的作用不一样，是切换输入法和非输入法<br>Ctrl+Tab焦点向下一项移动<br>Ctrl+Shift+Tab=Shift+Tab焦点向上一项移动<br>Ctrl+F4 Win资源管理器中切至地址栏；媒体播放中停止。</p>
<p>Windows快捷键大全文字处理类<br>Ctrl+a 全选All<br>Ctrl+b 粗体 Black<br>Ctrl+c 或insert 拷贝 Copy<br>Ctrl+d 字体格式 Decorate<br>Ctrl+e 居中对齐 Encenter<br>Ctrl+f 查找 Find<br>Ctrl+g 定位 Get address<br>Ctrl+h 替换 Huan<br>Ctrl+i 斜体 italic<br>Ctrl+j 两端对齐 Justify<br>Ctrl+k 超级链接 King Link<br>Ctrl+l 左对齐 Left Ailgn<br>Ctrl+m 左缩进 M……<br>Ctrl+n 新建 New 或Ctrl+Shift+n<br>Ctrl+o 打开 Open<br>Ctrl+p 打印 Print<br>Ctrl+r 右对齐 Right Align<br>Ctrl+s 保存 Save<br>Ctrl+t 首行缩进 =Tab<br>Ctrl+u 下划线 Underline<br>Ctrl+v = Shift + Insert 粘贴 Paste （在c边上故随意赋键)<br>Ctrl+w关闭当前的窗口、标签页、工作、文件或停止媒体播放Work<br>Ctrl+x 剪切<br>Ctrl+y= Alt+Shift + Backspace重复 （反撤销）<br>Ctrl+z= Alt + Backspace撤销</p>
<p>Ctrl+F4 Word中关闭当前应用程序中的当前文件。<br>Ctrl+F6 Word中切换到当前应用程序中的下一个文本。<br>Alt + 双击超链接执行匹配的命令（或选择选项）<br>Ctrl + 双击超链接打开链接<br>Shift word等Micro Office系列软件中按下不放，可以跳过自启动的宏</p>
<p>Win键</p>
<p>Win键+ 向上键最大化窗口<br>Win键+ 向左键将窗口右移或<br>Win键+ 向右键将窗口<br>Win键+ 向下键最小化窗口<br>Win键+ F1 显示“帮助”<br>Win键+PrintScreen键截取当前屏幕到剪贴板，并保存截屏图片文件到“图片”文件夹中。（WIN8/10）<br>Win键或Ctrl+Esc打开开始菜单<br>Win键+Break打开“系统属性”对话框<br>Win键+Pause显示“系统属性”对话框<br>Win键+Tab循环切换任务栏上的程序（win7、win8）（windowsXP不适用）<br>Win键 + Tab使用 Aero Flip 3-D 循环切换任务栏上的程（win7）（windowsxp不适用）<br>Win键 +Tab+ Ctrl通过 Aero Flip 3-D 使用方向键循环切换任务栏上的程序 （win7）<br>Win键 + Space如果开启了AERO效果，预览桌面 （win7）（在win10此项是小界面切换输入法）<br>Win键+ Home最小化除活动窗口之外的所有窗口（win7）（windowsXP不适用</p>
<p>主键盘区上的数字<br>Win键+数字启动锁定到任务栏中的由该数字所表示位置处的程序。如果该程序已在运行，则切换到该程序<br>Win键+Shift+数字启动锁定到任务栏中的由该数字所表示位置处的程序的新实例<br>Win键+Alt+ 数字打开锁定到任务栏中的第该数字个程序的跳转列表(Jump List)）</p>
<p>Win键+B 选中桌面右下方托盘栏或任务栏Progress Bar<br>Win键+D显示桌面Desktop<br>Win键+E打开Windows资源管理器Explorer【即我的电脑、计算机】<br>Win键+F 打开“查找：所有文件”对话框（win10中为打开反馈中心）（Win资源管理器中为切至查找栏）<br>Win键+F+Ctrl 搜索计算机（如果已连接到网络）<br>Win键+G 循环切换小工具（win7）（win10打开xbox菜单）（windowsXP不适用）<br>Win键+I 打开“设置”（win10）<br>Win键+L 锁定计算机或切换用户<br>Win键+M 最小化所有窗口<br>Win键+Shift+M 将最小化的窗口还原到桌面<br>WIN键+P 多荧幕\投影仪选项选择演示显示模式。（WIN7）出现菜单后再摁Win+P选择选项，放开Win即可 确定。也可摁一次然后方向键选择回车键确定。<br>Win键+R 打开“运行”对话框<br>WIN键+T 显示任务栏当前所用程序的任务栏缩略图，再按一次切换到其他缩略图。（QWIN7）<br>Win键+U 打开辅助工具管理器、轻松访问中心<br>Win键+X 打开 Windows 移动中心（win7）（win10唤起开始按钮右键菜单）（windowsXP不适用）</p>
<p>Windows快捷键大全Alt键</p>
<p>Alt+Space 打开活动窗口最左上角的菜单<br>Alt+Space+N 新窗口<br>Alt+Tab切换当前程序 （加Shift反向）<br>Alt+Esc 切换当前程序 （加Shift反向）<br>Alt+Ender 将windows下运行的MSDOS窗口在窗口和全屏幕状态间切换<br>Alt+Print Screen将当前活动程序窗口以图像方式拷贝到剪贴板（加shift 可以跳到前一个窗口）<br>向后移动到上一个视图 ALT+左箭头<br>向前移动到上一个视图 ALT+右箭头</p>
<p>Windows快捷键大全Shift键</p>
<p>关闭所选文件夹及其所有父文件夹<br>按住 Shift键再单击“关闭按钮（仅适用于“我的电脑”）</p>
<p>Windows快捷键大全系统自带放大镜程序</p>
<p>Windows快捷键大全旧版放大镜<br>Windows+PRINT SCREEN 将屏幕复制到剪贴板（包括鼠标光标）<br>Windows+SCROLL LOCK 将屏幕复制到剪贴板（不包括鼠标光标）<br>Windows+PAGE UP 切换反色。<br>Windows+ PAGE DOWN 切换跟随鼠标光标<br>Windows+向上箭头 增加放大率<br>Windows+向下箭头 减小放大率</p>
<p>Windows给出的放大镜快捷键<br>Win+ 唤起放大镜；放大<br>Win- 缩小<br>（设置中单次按键倍率可调）</p>
<p>Windows快捷键大全小键盘</p>
<p>NUM LOCK+负号(-)折叠所选的文件夹<br>NUM LOCK+乘号(*)展开所选的文件夹下的所有文件及文件夹<br>NUM LOCK+加号(+) 展开所选的文件夹</p>
<p>Windows快捷键大全IE浏览器</p>
<p>显示前一页（前进键） ALT+RIGHT ARROW<br>显示后一页（后退键） ALT+LEFT ARROW<br>在页面上的各框架中切换 （加shift反向）Ctrl+TAB<br>这个键用来打开IE中的地址栏列表，要关闭IE窗口，可以用Alt+F4组合键 F4<br>刷新 F5<br>强行刷新 Ctrl+F5<br>可以快速在资源管理器及IE中定位到地址栏 F6<br>激活程序中的菜单栏 F10<br>可以使当前的资源管理器或IE变为全屏显示 F11<br>执行菜单上相应的命令 ALT+菜单上带下划线的字母<br>关闭多文档界面程序中的当前窗口 Ctrl+ F4<br>关闭当前窗口或退出程序 ALT+ F4<br>添加当前页面到收藏夹 Ctrl+ D<br>显示所选对话框项目的帮助 F1<br>显示当前窗口的系统菜单 ALT+空格键<br>显示所选项目的快捷菜单 Shift+ F10<br>显示“开始”菜单 Ctrl+ ESC<br>显示多文档界面程序的系统菜单 ALT+连字号(-)<br>切换到上次使用的窗口 按住ALT然后重复按TAB，<br>切换到另一个窗口 ALT+ TAB<br>在后台打开一个页面 Ctrl+ 鼠标左键单击<br>在新窗口中打开一个页面 Shift+ 鼠标左键单击</p>
<p>Windows快捷键大全Windows资源管理器</p>
<p>插入光盘时不用“自动播放”功能 按住 Shift插入 CD-ROM<br>复制文件 按住Ctrl拖动文件<br>创建快捷方式按住 Ctrl+Shift拖动文件 或按住 ALT拖动文件<br>立即删除某项目而不将其放入回收站 Shift+DELETE<br>显示“查找：所有文件” F3<br>显示项目的快捷菜单 APPLICATION键<br>刷新窗口的内容 F5<br>重命名项目 F2<br>重命名项目 F2 重命名时按Tab键可重命名下一文件，不用按回车+向下+F2<br>选择所有项目 Ctrl+ A<br>查看项目的属性 ALT+ ENTER或 ALT+双击</p>
<p>Windows快捷键大全辅助选项</p>
<p>切换筛选键开关 右Shift八秒<br>切换高对比度开关 左ALT+左Shift+PRINT SCREEN<br>切换鼠标键开关 左ALT+左Shift+NUM LOCK<br>切换切换键开关 NUM LOCK五秒<br>右侧 Shift 键八秒钟 切换“筛选键”的开和关。<br>左 ALT + 左 Shift + PRINT SCREEN 切换“高对比度”的开和关。<br>左 ALT + 左 Shift + NUM LOCK 切换“鼠标键”的开和关。<br>Shift 键五次 切换“粘滞键”的开和关。<br>Num Lock 键五秒钟 切换“切换键”的开和关。<br>WIN+ U 打开“辅助功能管理器”。</p>
<p>Windows快捷键大全Win10</p>
<p>Win键+字母<br>Win键+A：激活操作中心<br>Win键+B：聚焦于右下角托盘区<br>Win键+C：通过语音激活Cortana<br>Win键+D：显示桌面<br>Win键+E：打开文件管理器<br>Win键+G：打开Xbox游戏录制工具栏，供用户录制游戏视频或截屏激活截屏功能<br>Win键+H：激活Windows10应用的分享功能<br>Win键+I：打开Windows10设置<br>Win键+K：激活无线显示器连接或音频设备连接<br>Win键+L：锁定屏幕<br>Win键+P：投影屏幕<br>Win键+R：运行<br>Win键+S：搜索、激活Cortana（微软小娜）<br>Win键+T：快速切换任务栏程序<br>Win键+V：打开云剪贴板<br>Win键+X：打开高级用户功能</p>
<p>　　Win键+非字母<br>Win+Break：看配置<br>Win键+Space：快速显示桌面<br>Win键+Tab：激活任务视图<br>Win键+分号：调出 Emoji 表情<br>Win键+1/2/3：打开任务栏中固定的程序，1代表任务栏中第一个应用图标<br>Win键+左/右/上/下：移动应用窗口<br>Win键+Shift+左箭头：移动到左边屏幕。<br>Win键+Shift+右箭头：移动到右边屏幕。<br>Win键+Shift+S：Windows自带截图<br>Win键+Ctrl+D：创建一个新的虚拟桌面<br>Win键+Ctrl+F4：关闭虚拟桌面<br>Win键+Ctrl+左/右：切换虚拟桌面</p>
<p>　　Ctrl键<br>Ctrl+Shift+N：新建文件夹。<br>Ctrl+shift+左键：以管理员身份运行。<br>Ctrl+Shift+Esc：任务管理器<br>Ctrl+Shift+Del：安全选项列表<br>Ctrl+W：关闭当前窗口。<br>Ctrl+F：定位到搜索框。</p>
<p>　　Alt键<br>Alt+D：定位到地址栏。<br>Alt+向左键：查看上一个文件夹。<br>Alt+向右键：查看下一个文件夹。<br>Alt+向上键：查看父文件夹。</p>
<p>　　Shift键<br>Shift+右键点击目录：在此处打开命令行窗口选项。<br>Shift+右键点击文件：发送到菜单。<br>Shift+点击任务栏（已经打开的）图标打开新窗口</p>
<p>　　鼠标<br>在同一分区目录间拖曳，默认执行剪切操作，按下Ctrl+拖曳，执行拷贝操作。<br>在不同分区间进行拖曳，默认执行拷贝操作，按下Shift+拖拽，执行剪切操作。<br>Alt+拖曳，创建快捷方式。</p>
<p>Windows快捷键大全WinXP</p>
<p>Ctrl + Shift + 任何箭头键 突出显示一块文本。<br>Shift + 任何箭头键 在窗口或桌面上选择多项，或者选中文档中的文本。<br>Ctrl + A 选中全部内容。<br>F3 搜索文件或文件夹。<br>Alt + Enter 查看所选项目的属性。<br>Alt + F4 关闭当前项目或者退出当前程序。<br>Alt + 空格键 为当前窗口打开快捷菜单。<br>Ctrl + F4 在允许同时打开多个文档的程序中关闭当前文档。<br>Alt + Tab 在打开的项目之间切换。<br>Alt + Esc 以项目打开的顺序循环切换。<br>F6 在窗口或桌面上循环切换屏幕元素。<br>F9+FN键是键盘锁定<br>F4 显示“我的电脑”和“Windows 资源管理器”中的“地址”栏列表。<br>Shift + F10 显示所选项的快捷菜单。<br>Alt + 空格键 显示当前窗口的“系统”菜单。<br>Ctrl + Esc 显示“开始”菜单。<br>ALT + 菜单名中带下划线的字母 显示相应的菜单。<br>在打开的菜单上显示的命令名称中带有下划线的字母 执行相应的命令。<br>F10 激活当前程序中的菜单条。<br>右箭头键 打开右边的下一菜单或者打开子菜单。<br>左箭头键 打开左边的下一菜单或者关闭子菜单。<br>F5 刷新当前窗口。<br>BackSpace 在“我的电脑”或“Windows 资源管理器”中查看上一层文件夹。<br>Esc 取消当前任务。<br>将光盘插入到 CD-ROM 驱动器时按 Shift 键 阻止光盘自动播放。</p>
<p>Windows快捷键大全对话框</p>
<p>取消当前任务 ESC<br>如果当前控件是个按钮，要单击该按钮。<br>如果当前控件是个复选框，要选择或清除该复选框<br>或者如果当前控件是个选项按钮，要单击该选项空格键<br>单击相应的命令 ALT+带下划线的字母<br>单击所选按钮 ENTER<br>在选项上向后移动 Shift+ TAB<br>在选项卡上向后移动 Ctrl+ Shift+ TAB<br>在选项上向前移动 TAB<br>在选项卡上向前移动 Ctrl+ TAB<br>如果在“另存为”或“打开”对话框中选择了某文件夹，要打开上一级文件夹<br>BACKSPACE<br>在“另存为”或“打开”对话框中打开“保存到”或“查阅” F4<br>刷新“另存为”或“打开”对话框 F5</p>
<p>Windows快捷键大全自然键盘</p>
<p>WIN 显示或隐藏”开始”菜单。<br>WIN+ BREAK 显示”系统属性”对话框。<br>WIN+ D 显示桌面。<br>WIN+ M 最小化所有窗口。<br>WIN+ Shift + M 还原最小化的窗口。<br>WIN+ E 打开”我的电脑”。<br>WIN+ F 打开windows反馈页面，F代表feedback。<br>Ctrl+WIN+ F 搜索计算机。<br>WIN+ F1 显示 Windows 帮助。<br>WIN+ L 如果连接到网络域，则锁定您的计算机，或者如果没有连接到网络域，则切换用户。<br>WIN+ R 打开”运行”对话框。<br>KEY 显示所选项的快捷菜单。<br>WIN+ U 打开”工具管理器”。</p>
<p>Windows快捷键大全对话框</p>
<p>Ctrl + Tab 在选项卡之间向前移动。<br>Ctrl + Shift +Tab 在选项卡之间向后移动。<br>Tab 在选项之间向前移动。<br>Shift + Tab 在选项之间向后移动。<br>ALT + 带下划线的字母 执行相应的命令或选中相应的选项。<br>Enter 执行活选项动或按钮所对应的命令。<br>空格键 如果活选项动是复选框，则选中或清除该复选框。<br>箭头键 活选项动是一组选项按钮时，请选中某个按钮。<br>F1 显示帮助。<br>F4 显示当前列表中的项目。</p>
<p>Windows快捷键大全生僻快捷键</p>
<p>Windows中的快捷键我们都很熟悉了，可是下面这些快捷键你平时用过吗？与普通的快捷键相比，它们的使用方法有些特别：这些键不能同时按下，而是要用两步或三步的连续操作，才能实现一项功能。虽然如此，使用这些快捷键也比使用鼠标方便。<br>Alt+空格→X 最大化当前窗口<br>Alt+空格→N 最小化当前窗口<br>提示：“Alt+空格→X”表示先按下“Alt+空格”组合键，然后松开组合键，再按下X键。下面“→”符号均表示先松开符号前按下的键，再按下符号后面的键。<br>在桌面或文件夹窗口中可使用以下快捷键（注意是文件夹窗口而不是具体的文件夹）：<br>右键→I→N 按名称排列图标<br>右键→I→T 按类型排列图标（呵呵，搞IT的应该记得住吧）<br>右键→I→Z 按大小排列图标<br>右键→I→D 按日期排列图标<br>右键→W→F 新建文件夹<br>右键→R 若在桌面则打开“显示属性”在文件夹则打开该文件夹的属性<br>右键→E 刷新当前窗口，效果等同F5<br>提示：这里的“右键”指的是主键盘区最下排右侧的Windows徽标键和Ctrl之间的那个键。<br>如果当前窗口是某个具体文件或文件夹：<br>右键→S 创建当前文件或目录的快捷方式<br>右键→R 查看当前文件或目录属性（相当于Alt+Enter）<br>右键→O 打开当前文件或目录（相当于回车）<br>右键→T→A 发送当前文件或目录到软盘<br>注意：有些软件可能会在右键里增加一些菜单，这些菜单的快捷键可能会与系统快捷键发生冲突。比如WinRAR会在文件或文件夹的右键菜单中增加一个“添加到”的菜单，该菜单的快捷键S会与系统右键菜单“创建快捷方式（S）”发生冲突。如果要去掉这些“外来”的右键菜单，我们可以打开WinRAR，在菜单栏上依次点击“选项→设置”，打开“设置”对话框，在“综合”选项卡中点击“选择关联菜单项目”按钮，在打开的对话框中清空所有选项前的复选框即可。<br>如果当前窗口是记事本：<br>右键→U 撤消操作，效果等同与Ctrl+Z<br>右键→P 粘贴，效果等同与Ctrl+V<br>右键→A 选中全部文字，效果等同于Ctrl+A<br>使用“我的电脑”和“Windows资源管理器”的快捷键<br>目的快捷键<br>关闭所选文件夹及其所有父<br>文件夹按住 Shift键再单击“关闭按钮（仅适用于“我的电脑”）<br>向后移动到上一个视图 ALT+左箭头<br>向前移动到上一个视图 ALT+右箭头<br>查看上一级文件夹 BACKSPACE<br>其实，这些快捷键大家都可以在相关程序的右键菜单中找到，在这里只是选择了几个比较实用的归纳了一下，你也可以自己研究。比如当前窗口是某个文件或文件夹，那么用“右键→M”就可以对该文件或文件夹进行重命名操作。不同的程序有不同的快捷键，大家可以自己研究试用，举一反三。</p>
<p>Windows快捷键大全其他资料</p>
<p>一、常见用法：<br>F1 显示当前程序或者windows的帮助内容。<br>F2 当你选中一个文件的话，这意味着“重命名”<br>F3 当你在桌面上的时候是打开“查找：所有文件” 对话框<br>F10或ALT 激活当前程序的菜单栏<br>Win键或Ctrl+ESC 打开开始菜单<br>Ctrl+ALT+DELETE 在win9x中打开关闭程序对话框<br>DELETE 删除被选择的选择项目，如果是文件，将被放入回收站<br>Shift+DELETE 删除被选择的选择项目，如果是文件，将被直接删除而不是放入回收站<br>Ctrl+N 新建一个新的文件<br>Ctrl+O 打开“打开文件”对话框<br>Ctrl+P 打开“打印”对话框<br>Ctrl+S 保存当前操作的文件<br>Ctrl+X 剪切被选择的项目到剪贴板<br>Ctrl+INSERT 或 Ctrl+C 复制被选择的项目到剪贴板<br>Shift+INSERT 或 Ctrl+V 粘贴剪贴板中的内容到当前位置<br>ALT+BACKSPACE 或 Ctrl+Z 撤销上一步的操作<br>Ctrl+Y 重做上一步被撤销的操作<br>ALT+Shift+BACKSPACE重做上一步被撤销的操作<br>Win键+M 最小化所有被打开的窗口。<br>Win键+Ctrl+M 重新将恢复上一项操作前窗口的大小和位置<br>Win键+E 打开资源管理器<br>Win键+F 打开“查找：所有文件”对话框<br>Win键+R 打开“运行”对话框<br>Win键+BREAK 打开“系统属性”对话框<br>Win键+Ctrl+F 打开“查找：计算机”对话框<br>Shift+F10或鼠标右击 打开当前活动项目的快捷菜单<br>Shift 在放入CD的时候按下不放，可以跳过自动播放CD。在打开word的时候按下不放，可以跳过自启动的宏<br>ALT+F4 关闭当前应用程序<br>ALT+SPACEBAR 打开程序最左上角的菜单<br>ALT+TAB 切换当前程序<br>ALT+ESC 切换当前程序<br>ALT+ENTER 将windows下运行的MSDOS窗口在窗口和全屏幕状态间切换<br>PRINT SCREEN 将当前屏幕以图象方式拷贝到剪贴板<br>ALT+PRINT SCREEN 将当前活动程序窗口以图象方式拷贝到剪贴板<br>Ctrl+F4 关闭当前应用程序中的当前文本（如word中）<br>Ctrl+F6 切换到当前应用程序中的下一个文本（加shift 可以跳到前一个窗口）<br>在IE中：<br>ALT+RIGHT ARROW 显示前一页（前进键）<br>ALT+LEFT ARROW 显示后一页（后退键）<br>Ctrl+TAB 在页面上的各框架中切换（加shift反向）<br>F5 刷新<br>Ctrl+F5 强行刷新<br>目的快捷键<br>激活程序中的菜单栏 F10<br>执行菜单上相应的命令 ALT+菜单上带下划线的字母<br>关闭多文档界面程序中的当<br>前窗口 Ctrl+ F4<br>关闭当前窗口或退出程序 ALT+ F4<br>复制 Ctrl+ C<br>剪切 Ctrl+ X<br>删除 DELETE<br>显示所选对话框项目的帮助 F1<br>显示当前窗口的系统菜单 ALT+空格键<br>显示所选项目的快捷菜单 Shift+ F10<br>显示“开始”菜单 Ctrl+ ESC<br>显示多文档界面程序的系统<br>菜单 ALT+连字号(-)<br>粘贴 CTR L+ V<br>切换到上次使用的窗口或者<br>按住 ALT然后重复按TAB，<br>切换到另一个窗口 ALT+ TAB<br>撤消 Ctrl+ Z<br>二、使用“Windows资源管理器”的快捷键<br>目的快捷键<br>如果当前选择展开了，要折<br>叠或者选择父文件夹左箭头<br>折叠所选的文件夹 NUM LOCK+负号(-)<br>如果当前选择折叠了，要展开<br>或者选择第一个子文件夹右箭头<br>展开当前选择下的所有文件夹 NUM LOCK+*<br>展开所选的文件夹 NUM LOCK+加号(+)<br>在左右窗格间切换 F6<br>三、使用 Win键<br>可以使用 Microsoft自然键盘或含有 Windows徽标键的其他任何兼容键盘的以下快捷键。<br>目的快捷键<br>在任务栏上的按钮间循环 WINDOWS+ TAB<br>显示“查找：所有文件” WINDOWS+ F<br>显示“查找：计算机” Ctrl+ WINDOWS+ F<br>显示“帮助” WINDOWS+ F1<br>显示“运行”命令 WINDOWS+ R<br>显示“开始”菜单 WINDOWS<br>显示“系统属性”对话框 WINDOWS+ BREAK<br>显示“Windows资源管理器” WINDOWS+ E<br>最小化或还原所有窗口 WINDOWS+ D<br>撤消最小化所有窗口 Shift+ WINDOWS+ M<br>四、使用“我的电脑”和“Windows资源管理器”的快捷键<br>目的快捷键<br>关闭所选文件夹及其所有父<br>文件夹按住 Shift键再单击“关闭按钮（仅适用于“我的电脑”）<br>向后移动到上一个视图 ALT+左箭头<br>向前移动到上一个视图 ALT+右箭头<br>查看上一级文件夹 BACKSPACE<br>五、使用对话框中的快捷键<br>目的快捷键<br>取消当前任务 ESC<br>如果当前控件是个按钮，要<br>单击该按钮或者如果当前控<br>件是个复选框，要选择或清<br>除该复选框或者如果当前控<br>件是个选项按钮，要单击该<br>选项空格键<br>单击相应的命令 ALT+带下划线的字母<br>单击所选按钮 ENTER<br>在选项上向后移动 Ctrl+ TAB<br>在选项卡上向后移动 Ctrl+ Shift+ TAB<br>在选项上向前移动 TAB<br>在选项卡上向前移动 Ctrl+ TAB<br>如果在“另存为”或“打开”<br>对话框中选择了某文件夹，<br>要打开上一级文件夹 BACKSPACE<br>在“另存为”或“打开”对<br>话框中打开“保存到”或<br>“查阅” F4<br>刷新“另存为”或“打开”<br>对话框 F5<br>六、使用“桌面”、“我的电脑”和“Windows资源管理器”快捷键<br>选择项目时，可以使用以下快捷键。<br>目的快捷键<br>插入光盘时不用“自动播放”<br>功能按住 Shift插入 CD-ROM<br>复制文件按住 Ctrl拖动文件<br>创建快捷方式按住 Ctrl+Shift拖动文件<br>立即删除某项目而不将其放入“回收站” Shift+DELETE<br>显示“查找：所有文件” F3<br>显示项目的快捷菜单 APPLICATION键<br>刷新窗口的内容 F5<br>重命名项目 F2<br>选择所有项目 Ctrl+ A<br>查看项目的属性 ALT+ ENTER或 ALT+双击<br>可将 APPLICATION键用于 Microsoft自然键盘或含有 APPLICATION键的其他兼容键<br>七、Microsoft放大程序的快捷键<br>这里运用Windows徽标键和其他键的组合。<br>快捷键目的<br>Windows徽标+PRINT SCREEN将屏幕复制到剪贴板（包括鼠标光标）<br>Windows徽标+SCROLL LOCK将屏幕复制到剪贴板（不包括鼠标光标）<br>Windows徽标+ PAGE UP切换反色。<br>Windows徽标+ PAGE DOWN切换跟随鼠标光标<br>Windows徽标+向上箭头增加放大率<br>Windows徽标+向下箭头减小放大率<br>八、使用辅助选项快捷键<br>目的快捷键<br>切换筛选键开关右Shift八秒<br>切换高对比度开关左ALT+左Shift+PRINT SCREEN<br>切换鼠标键开关左ALT+左Shift+NUM LOCK<br>切换粘滞键开关 Shift键五次<br>切换切换键开关 NUM LOC2000 快捷键<br>Windows 资源管理器”的快捷键<br>请按 目的<br>END 显示当前窗口的底端。<br>HOME 显示当前窗口的顶端。<br>NUM LOCK+ 数字键盘的星号 (*) 显示所选文件夹的所有子文件夹。<br>NUM LOCK+ 数字键盘的加号 (+) 显示所选文件夹的内容。<br>NUM LOCK+ 数字键盘的减号 (-) 折叠所选的文件夹<br>向左键 当前所选项处于展开状态时折叠该项，或选定其父文件夹。<br>向右键 当前所选项处于折叠状态时展开该项，或选定第一个子文件夹。<br>注意<br>如果在“辅助功能选项”中打开“粘滞键”，则有些快捷键可能不起作用。<br>如果您通过“Microsoft 终端服务客户”连接到 Windows 2000，则某些快捷键将会更改。详细信息，请参阅“Microsoft 终端服务客户”的联机文档。<br>f1－帮助<br>f2－重命名<br>f5－刷新<br>alt+f4－关闭窗口<br>ctrl+a=全部选中<br>ctrl+c=拷贝<br>ctrl+v=粘贴<br>ctrl+x=剪切<br>alt+enter(或ALT+双击鼠标左键)=属性</p>
]]></content>
      <tags>
        <tag>Windows</tag>
        <tag>IT</tag>
        <tag>随手笔记</tag>
        <tag>微软</tag>
        <tag>电脑</tag>
      </tags>
  </entry>
  <entry>
    <title>注册免费域名 + Github Pages套域名</title>
    <url>/2021/10/03/web/</url>
    <content><![CDATA[<p>今天为大家分享“如何注册免费域名 与 使用GitHub Pages来套免费域名”<br>开始前和大家说件事</p>
<p><code>就是我会在来临的10月10日开学。所以10月10日之后我可能再也不会更新此博客了，在此感谢大家浏览我的博客！！</code></p>
<p>回来正题</p>
<h2>注册免费Freenom域名</h2><h5>有域名的可以跳过</h5>
这里呢我就用Freenom域名提供商的域名。如果你有域名的话拿去给cloudflare或者dnspod进行域名解析

<p>但是注意 <code>Freenom的域名不能在dnspod解析，因为freenom提供的域名已经被国内墙了。</code></p>
<h2>注册域名</h2>
首先，先到Freenom官网使用谷歌账号登录（这样之后操作比较简单）。Freenom官网：[Freenom](https://freenom.com)

<p>来到主页选择登录（右上角），选择使用谷歌账号登录。选择谷歌账号即可。</p>
<p>返回官网，输入你想要的域名，后面要有后缀，回车。如图：<br><img src="https://cdn.jsdelivr.net/gh/cypicbed/cypic/img/fn1.jpg" width="650"><br>之后选择完成  </p>
<p>这里把3 month改成12 month 如果不懂的话可以私信我<br>选择 continue</p>
<p>之后来的另一个页面，把 <code>I have read and agree to the Terms &amp; Conditions</code>勾上，选择complete order<br>最后选择 <code>Click here to go to your Client Area</code><br>最后会出现报错页面：<br><img src="https://cdn.jsdelivr.net/gh/cypicbed/cypic/img/fn2.jpg" width="650"><br>别紧张，关掉页面重新进入官网，之后滑倒最下方选择my domain，如图：<br><img src="https://cdn.jsdelivr.net/gh/cypicbed/cypic/img/fn3.jpeg" width="650"><br>这里就会有你刚刚注册的域名：<br>在你的域名的后面有一个manage domain，点击manage domain，等待7分钟后选择 <code>Manage Freenom DNS</code><br>之后添加以下记录：<br>-CNAME<br>-A</p>
<p>CNAME的名称填写www，value填写刚刚注册的域名 TTL默认<br>A记录的名称空着，value填写Github pages IP（之后会提到）TTL默认</p>
<p>最后保存。</p>
<h2>Github Pages</h2>
至于github pages 可以看我朋友的文章 [听话的便当](https://byn6.github.io/2021/08/29/gp-h/)
这里只说绑域名部分，
如果是hexo框架的在source路径添加一个名为CNAME的文件（没有后缀）
使用终端ping你的github pages以获取ip，然后这个ip放在A记录的value里
至于CNAME的内容就输入你的域名，就像`www.xxx.ml`保存上传

<p>如果你的不是框架的而是你自己写的博客，在目录下新增一个名为CNAME没有后缀的文件内容和刚刚的有框架的内容也一样</p>
<p>之后把刚刚的A dns记录保存。</p>
<p>再github仓库内打开设置选择pages 就会看到域名正在验证只要有绿色勾勾就可以了。</p>
<p>今天的博客可能写得有点乱所以有什么问题群组问<br>TG群组：<a href="https://t.me/hlx666">https://t.me/hlx666</a></p>
]]></content>
      <tags>
        <tag>IT</tag>
        <tag>域名</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>【建网】Termux部署Hexo</title>
    <url>/2021/10/07/tm-hexo/</url>
    <content><![CDATA[<p>今天呢，废话不多直接进入主题</p>
<h2>第一步：安装</h2>

<p>我们需要下载的软件有:Termux。</p>
<p>你可能想问:什么？就一个吗？？</p>
<p>没错，Termux作为我面前见过最nb的安卓应用，用它部署Hexo简直绰绰有余！</p>
<p>点击这里安装最新版本的Termux:<a href="https://f-droid.org/repo/com.termux_117.apk">https://f-droid.org/repo/com.termux_117.apk</a></p>
<p><code>注意:谷歌商店的版本特别老，不要从那里安装</code></p>
<p>好了，第一步完成！</p>
<h2>第二步：安装框架等</h2>
你可能又想问了:什么？不是就安装一个吗？？

<p>没错，在手机上安装的软件只有Termux一个，</p>
<p>而我们此时要在Termux里安装软件。</p>
<p><code>好的！从现在开始，你需要把Termux想象成你电脑上的命令行！而这台电脑已经给你装好了基本的包管理器！听不懂没关系！</code></p>
<p>接下来我们运行几个命令:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pkg install nodejs //安装node.js</span><br><span class="line"></span><br><span class="line">pkg install git //安装git</span><br><span class="line"></span><br><span class="line">pkg install vim //安装vim命令行编辑器</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">pkg install nano //安装nano命令行编辑器(如果你觉得vim不好用的话)</span><br><span class="line"></span><br><span class="line">pkg install openssh //安装ssh以连接到Github仓库</span><br></pre></td></tr></table></figure>
<p><code>我个人呢比较推荐使用nano，因为nano比较容易操作</code></p>
<h2>第三步：生成</h2>
我们重启一次Termux(这样子可以在重启时打开默认的home文件夹，如果刚刚安装的时候你没乱打开文件夹也行)

<p>顺便说一句:打开文件夹的方式是–<br><code>cd xxx(文件夹名)</code></p>
<p>然后，使用如下指令，创建一个名为hexo的文件夹:</p>
<p><code>mkdir hexo</code></p>
<p>进入文件夹:</p>
<p><code>cd hexo</code><br>使用Hexo的生成指令:<br>(这跟电脑一模一样好吧！下面知道步骤的人可以先行去操作了)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g //生成hexo的配置文件</span><br><span class="line"></span><br><span class="line">npm install hexo-deployer-git --save //git插件</span><br><span class="line"></span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p><code>当然，在手机上的Hexo指令和电脑上是一模一样的，比方说hexo s，就是在本地4000端口生成预览;hexo new xxx，就是生成链接为xxx的文章</code></p>
<p>那么主题怎么安装呢？</p>
<p>我们随便打开一个Hexo主题仓库:</p>
<p><code>注意:使用浏览器的电脑模式</code><br><img src="https://static01.imgkr.com/temp/7b59339ed3b943c8ae0c2e6b4a60d221.jpg" width="500"></p>
<p>如图所示，画圈圈的位置，我们复制一下ssh格式的链接;</p>
<p>然后在打开themes文件夹(cd)，执行命令:</p>
<p><code>git clone git@github.com:fluid-dev/hexo-theme-fluid.git</code></p>
<p>OK，等待下载完成之后，你就会发现themes文件夹多了一个名为主题名的文件夹;</p>
<p>怎么发现呢？</p>
<p>使用指令dir就可以查看所在文件夹的所有文件和子文件夹了！</p>
<p>关于编辑问题，跟电脑上如出一辙，什么主题_config.yml文件的配置，你肯定比我还懂。</p>
<p>那么怎么编辑？</p>
<h2>第四部：编辑</h2>
如果你选择使用了vim编辑器，那么我在这里只告诉你几个简单的指令就行了:
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi 文件名 //打开一个文件</span><br><span class="line"></span><br><span class="line">i //打开之后直接输入字母i，进入编辑模式</span><br><span class="line"></span><br><span class="line">ESC //结束编辑的话，先按这个，Termux键盘上有</span><br><span class="line"></span><br><span class="line">:wq //:指的是输入什么指令，w指令是保存，q指令是退出</span><br></pre></td></tr></table></figure>

<p>如果你选择了nano编辑器，那么我在这里也只告诉你几个简单的指令:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nano 文件名 //打开一个文件，打开之后直接就能编辑了</span><br><span class="line"></span><br><span class="line">ctrl o //保存这个文件，保存之后要再回车一下</span><br><span class="line"></span><br><span class="line">ctrl x //退出编辑</span><br></pre></td></tr></table></figure>

<p>重点来了！在电脑端的时候，我说明的是:在根目录的_config.yml里，repo是https形式，但是Github在八月几号的时候已经不允许https格式登陆了！所以我们在repo那一行的时候，要填写成ssh格式，就像上面那个主题的clone方式一样！！<br><img src="https://static01.imgkr.com/temp/1c212a124a2f4f248c6f32353dd2dd82.jpg" width="500"></p>
<p>如果你没听懂，那么你可以加入我们的Telegram群组询问:群组：<a href="https://t.me/hlx666">葫芦侠电报社群</a>;</p>
<p>OK，编辑的过程比较漫长，所以我不细讲了，总之vim和nano都是会越用越顺手的。</p>
<h2>第五步：SSH</h2>

<p>开始之前我建议你先看一下这个视频，以了解通过git推送到仓库的大概思路:</p>
<center><iframe src="//player.bilibili.com/player.html?aid=541656834&bvid=BV1fi4y1u7h7&cid=221722538&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" height="400" width="600" allowfullscreen="true"> </iframe></center>

<p>当然，最后我发现其实并不是那么麻烦，</p>
<p>你也不需要使用git指令推送仓库，最后一步还是用 <code>hexo g -d</code> 进行上传，</p>
<p>那么怎么做呢？(视频的的重点是前几十秒，在账户添加ssh的时候)</p>
<p>由于视频省略了前面的步骤啊，就是怎么生成公钥和私钥，</p>
<p>生成方法可以百度(更清晰)，我在这里简单说明一下，</p>
<p>执行代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//首先检测一下有没有账户:</span><br><span class="line"></span><br><span class="line">git config user.name</span><br><span class="line"></span><br><span class="line">git config user.email</span><br><span class="line"></span><br><span class="line">//如果没有的话，使用下面的命令添加:</span><br><span class="line"></span><br><span class="line">git config –global user.name ‘xxxxx’ //这里填你的Github信息 </span><br><span class="line"></span><br><span class="line">git config –global user.email ‘xxx@xx.com’ //这里是邮箱</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C ‘上面的邮箱’ //生成ssh密钥</span><br><span class="line"></span><br><span class="line">//之后返回文件夹，打开文件夹，找到id_rsa.pub文件，复制进去就行了</span><br></pre></td></tr></table></figure>

<p>如图，我已经成功了</p>
<img src="https://static01.imgkr.com/temp/ffb4a4b6c04a450ba313c075dfb9d0b7.jpg" width="500">

<p>之后，尽情编辑你的hexo吧！</p>
<p>使用 <code>hexo s</code> 生成本地预览;使用 <code>hexo new xxx</code> 生成新文章，</p>
<p>使用 <code>hexo g -d</code> 快速上传;</p>
<p>如果你还是失败了，请先检查根目录_config.yml最后几行的repo格式，是否已经换成了ssh格式;此外，我省略了大部分此文件的编辑细节，如果有需要的话可以继续看</p>
<h2>其他</h2>
我也是怕自己忘记了，这里说明几个常用的文件指令:
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -rf 文件名 //删除某文件</span><br><span class="line"></span><br><span class="line">dir //查看当前目录下所有目录</span><br><span class="line"></span><br><span class="line">dir -al //查看当前目录下所有目录(含隐藏目录)</span><br><span class="line"></span><br><span class="line">mkdir 文件名 //创建文件夹</span><br><span class="line"></span><br><span class="line">mv a b //如果a是文件，b是文件夹，则指的是把a移动到b</span><br><span class="line"></span><br><span class="line">mv a b //如果a和b都是文件，则指的是重命名a为b</span><br><span class="line"></span><br><span class="line">mv * ../ //这个非常强大，可以将当前目录下所有文件移动到上层目录。</span><br><span class="line"></span><br><span class="line">copy a b //把a复制到b</span><br></pre></td></tr></table></figure>

<hr>

<h2>写作部分</h2>
使用Hexo框架，可以用Markdown进行文章的写作——

<p>输入指令：</p>
<p><code>hexo new 文章标题</code></p>
<p>位置在source文件夹中的_posts文件夹中，名为“文章标题”的Markdown文件；</p>
<p>我们使用记事本打开看看</p>
<img src="https://thdbd666666.files.wordpress.com/2021/08/a8gcgcoj8gk31imkmgrg.png?w=651" width="500">

<p>可以发现它已经很贴心地帮我们写好开头了（当然“data”和“tags”删除也没有关系）；</p>
<p>接下来我们就可以用Markdown来创作了——</p>
<img src="https://thdbd666666.files.wordpress.com/2021/08/3b37icmc2g40gv2c3sdg.png?w=1024" width="500">

<p>这篇是我使用Markdown打出的一篇文章，那么它预览起来是什么样的呢？</p>
<p>在命令提示框输入：<br><code>hexo s</code><br><img src="https://thdbd666666.files.wordpress.com/2021/08/ycgroij6p5kumbqfy.png?w=993" width="500"><br>发现：生成了一个网站（<a href="http://localhost:4000）">http://localhost:4000）</a> ，此时复制后浏览器打开即可——</p>
<img src="https://thdbd666666.files.wordpress.com/2021/08/e59bbee78987-2.png?w=1024" width="500">

<p>（ps：如果要关闭预览，在CMD里按Ctrl+C；）</p>
<h2>美化（部分）</h2>
先修改 _config.yml
<img src="https://thdbd666666.files.wordpress.com/2021/08/okcl67554wieuipce1.png?w=450" width="500">

<p>这里是一些基本的，比如说你的网站名（第六行）；</p>
<p>描述（第八行）；</p>
<p>作者（第十行）；</p>
<p>语言（第十一行）；</p>
<img src="https://thdbd666666.files.wordpress.com/2021/08/cf4ofg1klobxmmswh57.png?w=994" width="500">
你的网站链接（注意：第十六行的URL一定要改成你将来要部署的网站！！！比如你要用GitHub Pages部署，就必须是那一节你部署过的网站链接！！！）；

<img src="https://thdbd666666.files.wordpress.com/2021/08/g21fy403ycizqtyvjbwzq.png?w=1024" width="500">
这里建议改成六的倍数（不只是吉利），这样的话会比较美观；
<img src="https://thdbd666666.files.wordpress.com/2021/08/6kr97sgt4stih6inn.png?w=1024" width="500">

<p>第一百行的主题名称改为之前让你复制的那个文件夹的名称（记得空格）；</p>
<p>第一百零五行“type”改为“git”；</p>
<p>第一百零六行加上“repo”，然后加上链接——</p>
<img src="https://thdbd666666.files.wordpress.com/2021/08/tkwxgnehh006du4k.png?w=1024" width="500">

<p>（注意：不是GitHub Pages的链接，是GitHub Pages的库的链接！！）</p>
<p>第一百零七行加上“branch”，名字随便起一个；</p>
<p>完成这些之后，我们可以再次用“hexo s”这个指令查看预览，发现已经更新主题了。</p>
<h3>部署阶段</h3>
整了这么多，你的网站也终究只在你的本地运行，那么怎么部署到GitHub Pages上呢——

<p>首先，我们需要用指令下载一个插件，用于连接GitHub账户和Hexo：</p>
<p><code>npm install hexo-deployer-git --save</code></p>
<p>安装之后，如果想确认是否安装成功，可以输入这个指令：</p>
<p><code>npm list hexo-deployer-git</code> </p>
<img src="https://thdbd666666.files.wordpress.com/2021/08/hllnoo91pxw9if27p1.png?w=993" width="500">

<p>出现了版本号，说明成功了；</p>
<p>接下来，输入指令——</p>
<p><code>hexo g -d</code></p>
<p>如果失败，则输入以下指令，之后再输入上面的指令：</p>
<p><code>git config --global credential.helper wincred</code></p>
<p>此时可能会有弹窗显示让你输入什么API，这个时候选择浏览器打开，之后登录按照要求填写你的GitHub账号密码；</p>
<p>之后，刷新一下你登录账号后的GitHub，会显示出现了一个新的分支（在上文，我的分支branch的名字是master）；此时，如果没有其他分支的话，应该是有两个分支——main和master；</p>
<p>在设置中，删除原先的main分支，并把master分支的名字改为main；</p>
<img src="https://thdbd666666.files.wordpress.com/2021/08/8qcwnxfkrvrj2x8gu6.png?w=1010" width="500">

<p>懂了吧？</p>
<p>注意：此时Hexo根目录的_config文件里，最下面的branch也要改为main；</p>
<p>之后，就可以轻松地用Hexo在本地书写，在GitHub Pages上显示啦！</p>
<p>其他更多Hexo书写技巧，以及指令，请到Hexo官网查看</p>
<hr>

<p>如果还是不明白的话可以加入我们的电报群：<a href="https://t.me/hlx666">https://t.me/hlx666</a></p>
<hr>

<p>文章就到此结束了。</p>
]]></content>
      <tags>
        <tag>IT</tag>
        <tag>Termux</tag>
        <tag>手机</tag>
        <tag>建网</tag>
        <tag>Github</tag>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title>云盘推荐 + 网站推荐</title>
    <url>/2021/10/13/yptj/</url>
    <content><![CDATA[<p>今天我给大家推荐一些云端云盘吧！</p>
<h1>云盘</h1>
<h3>Terabox</h3>
terabox其实就是百度云盘的海外版。这个云盘不像百度这样刚注册只有115gb的容量
terabox支持谷歌/脸书登录，登录了就会有1TB的容量。

<p>优点：</p>
<ul>
<li>支持谷歌/脸书登录</li>
<li>1TB容量</li>
<li>使用界面蛮像百度云盘</li>
</ul>
<p>缺点：</p>
<ul>
<li>语言不支持中文</li>
</ul>
<p><a href="https://terabox.com/">点击进入官网</a></p>
<hr>

<h3>Mega云盘</h3>
这个嘛没什么介绍的
优点：
- 端对端加密
- 语言支持中文
- 25gb容量（目前所知）

<p><a href="https://mega.io/">点击进入官网</a></p>
<h2>网站推荐</h2>

<h4>程源小站</h4>

<p>愤怒的鸟（AngryBird） （使用电脑打开效果更佳）<br><a href="https://cycxtit.gq/bird">网站</a></p>
<p>吃豆游戏 （使用电脑打开效果更佳）<br><a href="https://cycxtit.gq/pea">网站</a></p>
<p>辞职 恶搞<br><a href="https://cycxtit.gq/cz">网站</a></p>
<p>Win11网页模拟器 （使用电脑打开效果更佳）<br><a href="https://win11.cycxtit.gq/">网站</a></p>
<p>程源帮助文档<br><a href="https://docs.cycxtit.gq/">网站</a></p>
<p>桌面宠物<br><a href="https://cycxtit.gq/deskpet">网站</a></p>
<h2>工具网站推荐</h2>

<p>Office Tool Plus<br>简介：免费安装office<br><a href="https://otp.landian.vip/zh-cn/">官网</a></p>
<p>ShareDrop<br>简介：手机文件传送到另一个设备<br><a href="https://www.sharedrop.io/">官网</a></p>
<hr>
文章到此结束。]]></content>
      <tags>
        <tag>推荐</tag>
        <tag>IT</tag>
        <tag>云盘</tag>
      </tags>
  </entry>
  <entry>
    <title>Pagermaid--TG人形自走机器人</title>
    <url>/2022/01/30/Pagermaid/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>1.hax续期脚本已更新博客也同步更新</p>
<p>2.你是否在TG群里看见一些人形如机器人，能-s偷取你的贴纸还能-atll来@群里的全部程成员，这就是今天要介绍的内容，Pagermaid人形自走机器人</p>
<h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><p>·一台能上TG的VPS，系统最好是Ubuntu20.04，一台能上网的电脑，一个TG账号，还有ssh工具，我推荐FinalShell</p>
<h2 id="拉取项目"><a href="#拉取项目" class="headerlink" title="拉取项目"></a>拉取项目</h2><p>Pagermaid项目托管在github，所以首先要检查VPS是否安装git软件包，且当git软件包版过低时，无法实现程序的自动更新，所以首先要安装/升级git软件包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install --upgrade git -y</span><br></pre></td></tr></table></figure>

<p>安装完之后从仓库拉取项目</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /var/lib &amp;&amp; git clone https://github.com/Xtao-Labs/PagerMaid-Modify.git pagermaid &amp;&amp; cd pagermaid</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>拉取的项目在文件夹var/lib/pagermaid文件下（不在root文件夹下</p>
<h2 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h2><h3 id="imagemagick"><a href="#imagemagick" class="headerlink" title="imagemagick"></a>imagemagick</h3><p>此软件包用于处理图片，如您没有图片处理需求，您可以无需安装此软件包。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install imagemagick -y</span><br></pre></td></tr></table></figure>

<h3 id="neofetch"><a href="#neofetch" class="headerlink" title="neofetch"></a>neofetch</h3><p>此软件包用于显示系统信息，如您没有显示系统信息需求，您可以无需安装此软件包。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install neofetch -y</span><br></pre></td></tr></table></figure>

<h3 id="zbar"><a href="#zbar" class="headerlink" title="zbar"></a>zbar</h3><p>此软件包用于处理二维码信息，如您没有处理二维码信息需求，您可以无需安装此软件包。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install libzbar-dev -y</span><br></pre></td></tr></table></figure>

<h3 id="最大化安装"><a href="#最大化安装" class="headerlink" title="最大化安装"></a>最大化安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install tesseract-ocr tesseract-ocr-all -y</span><br></pre></td></tr></table></figure>

<h3 id="最小化安装"><a href="#最小化安装" class="headerlink" title="最小化安装"></a>最小化安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install tesseract-ocr tesseract-ocr-eng tesseract-ocr-chi-sim -y</span><br></pre></td></tr></table></figure>

<h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h3><p>此软件包用于记录信息，以方便软件重启后仍然可以进行上一次未完成的任务，你也可以无需安装此软件包。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install redis-server -y</span><br></pre></td></tr></table></figure>

<h3 id="Pip"><a href="#Pip" class="headerlink" title="Pip"></a>Pip</h3><p>此软件包为必须依赖包，用于安装 python 依赖。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install python3-pip -y</span><br></pre></td></tr></table></figure>

<h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>

<h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>将配置 <code>config.gen.yml</code> 文件复制一份并且命名为 <code>config.yml</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp config.gen.yml config.yml</span><br></pre></td></tr></table></figure>

<p>然后去<a href="https://my.telegram.org/">telegram官网</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220130145720068.png" alt="image-20220130145720068">然后点击这个创建</p>
<p><img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220130145807677.png" alt="image-20220130145807677"></p>
<p>信息随便填<img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220130150030976.png" alt="image-20220130150030976">然后到这个界面，吧app spi_id和hash复制下来，填入api_key和hash</p>
<p><img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220130150049369.png" alt="image-20220130150049369"></p>
<p>这是vim编辑器，如果你会你随便</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi config.yml</span><br></pre></td></tr></table></figure>

<p>不会的话就用finalshell，/var/lib/pagermaid</p>
<p><img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220130150509610.png" alt="image-20220130150509610"></p>
<p>然后在弹出的对话框修改相应值</p>
<p><img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220130150619167.png" alt="image-20220130150619167"></p>
<h2 id="登录账号"><a href="#登录账号" class="headerlink" title="登录账号"></a>登录账号</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -m pagermaid</span><br></pre></td></tr></table></figure>

<p>此步需要填入完整的电话号码（eg：<code>+12569986522</code>）然后 tg 会发给你的其他客户端发送验证码，填入验证码后，回车，如有两步验证密码，则再输入两步验证密码即可。现在你可以再任意对话发送  -help获取机器人运行情况</p>
<h2 id="设置守护进程"><a href="#设置守护进程" class="headerlink" title="设置守护进程"></a>设置守护进程</h2><p>此步骤可以方便 <code>pagermaid</code> 的自动运行，您无需在 <code>pagermaid</code> 意外退出后重新登录主机进行操作。</p>
<p>停止运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctrl + c</span><br></pre></td></tr></table></figure>

<p>然后设置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">&#x27;TEXT&#x27;</span> &gt; /etc/systemd/system/pagermaid.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=PagerMaid-Modify telegram utility daemon</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/var/lib/pagermaid</span><br><span class="line">ExecStart=/usr/bin/python3 -m pagermaid</span><br><span class="line">Restart=always</span><br><span class="line">TEXT</span><br></pre></td></tr></table></figure>

<p>复制以上代码，全部</p>
<h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><p>启动程序：<code>systemctl start pagermaid</code></p>
<p>设置为开机自启：<code>systemctl enable pagermaid</code></p>
<p>停止程序：<code>systemctl stop pagermaid</code></p>
<p>安装插件：<code>-apt install 插件名</code></p>
<p>帮助：<code>-help</code></p>
<p>带-的全在TG里输入</p>
<p>这是插件列表：<a href="https://index.xtaolabs.com/">https://index.xtaolabs.com/</a></p>
<br>
<hr>
转载于 [Imkcp的blog](https://blog.imkcp.xyz/2022/01/30/Pagermaid/)]]></content>
      <tags>
        <tag>IT</tag>
        <tag>Telegram</tag>
        <tag>Pagermaid</tag>
        <tag>好玩项目</tag>
      </tags>
  </entry>
  <entry>
    <title>使用hax，cf和x-ui搭建免费节点</title>
    <url>/2022/01/28/haxjd/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上期我们申请到了hax免费的VPS，那么现在就教大家来搭建节点，如果没有ipv6的话就可以放弃了，估计是用不了</p>
<h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><p>·一个域名，hax vps，一台能上网的设备</p>
<h2 id="搭建节点"><a href="#搭建节点" class="headerlink" title="搭建节点"></a>搭建节点</h2><h3 id="配置cf"><a href="#配置cf" class="headerlink" title="配置cf"></a>配置cf</h3><p><img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220128151451860.png" alt="image-20220128151451860"></p>
<p>ipv6地址填hax的，切记代理状态一定要打开，这是让cf来接管我们的流量，另外在进入SSL/TLS里的概述，将加密方式改为完全，如图所示<img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220128151740935.png" alt="image-20220128151740935"></p>
<p>然后申请证书，如图所示，然后点击创建就有了，切记要复制下来<img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220128152028348.png" alt="image-20220128152028348"></p>
<h3 id="VPS操作"><a href="#VPS操作" class="headerlink" title="VPS操作"></a>VPS操作</h3><h4 id="搭建x-ui"><a href="#搭建x-ui" class="headerlink" title="搭建x-ui"></a>搭建x-ui</h4><p>输入以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220128152236501.png"></p>
<p>这样就代表成功了</p>
<p>接着在浏览器地址栏输入 [ipv6地址]:54321进入x-ui的界面ipv6地址替换自己hax的地址，切记，别开代理，默认用户名和密码都是admin，现在就进入了面板<img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220128152744588.png" alt="image-20220128152744588"></p>
<h4 id="配置节点"><a href="#配置节点" class="headerlink" title="配置节点"></a>配置节点</h4><p>进入x-ui面板后点击入站列表，点击蓝色的加号，协议选择vmess，操作如下，然后点击添加<img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220128153235656.png" alt="image-20220128153235656"></p>
<p>然后点击查看复制链接，直接复制到v2ray客户端里<img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/secondimage-20220128153355311.png"></p>
<h3 id="测速图"><a href="#测速图" class="headerlink" title="测速图"></a>测速图</h3><p><img src="https://cdn.jsdelivr.net/gh/imkcpblog/chuang@main/second2022-01-28-15-40-05.png" alt="2022-01-28-15-40-05"></p>
<p>电信300M</p>
<br>
<hr>
转载于 [Imkcp的Blog](https://blog.imkcp.xyz/2022/01/28/haxjd/)]]></content>
      <tags>
        <tag>IT</tag>
        <tag>节点</tag>
        <tag>Hax</tag>
        <tag>VPS</tag>
        <tag>免费</tag>
        <tag>Cloudflare</tag>
        <tag>翻墙</tag>
        <tag>梯子</tag>
      </tags>
  </entry>
  <entry>
    <title>学习/资源网站</title>
    <url>/2022/02/14/studyresource/</url>
    <content><![CDATA[<h2 id="学吧导航"><a href="#学吧导航" class="headerlink" title="学吧导航"></a>学吧导航</h2><p><a href="https://www.xue8nav.com/">https://www.xue8nav.com/</a></p>
<h2 id="资源导航网站"><a href="#资源导航网站" class="headerlink" title="资源导航网站"></a>资源导航网站</h2><ol>
<li><p>书享家（电子书资源网站导航）： <a href="http://shuxiangjia.cn/">http://shuxiangjia.cn/</a></p>
</li>
<li><p>学吧导航（自学资源网站导航）： <a href="https://www.xue8nav.com/">https://www.xue8nav.com/</a></p>
</li>
<li><p>科塔学术（学术资源网站导航）： <a href="https://site.sciping.com/">https://site.sciping.com/</a></p>
</li>
<li><p>HiPPTer（PPT资源网站导航）： <a href="http://www.hippter.com/">http://www.hippter.com/</a></p>
</li>
<li><p>Seeseed（设计素材资源导航）： <a href="https://www.seeseed.com/">https://www.seeseed.com/</a></p>
</li>
</ol>
<h2 id="工具导航网站"><a href="#工具导航网站" class="headerlink" title="工具导航网站"></a>工具导航网站</h2><ol>
<li><p>阿猫阿狗导航（互联网工具导航）： <a href="https://dh.woshipm.com/">https://dh.woshipm.com/</a></p>
</li>
<li><p>创造狮（互联网工具导航）： <a href="http://chuangzaoshi.com/index">http://chuangzaoshi.com/index</a></p>
</li>
<li><p>addog（广告营销工具导航）： <a href="https://www.addog.vip/">https://www.addog.vip/</a></p>
</li>
<li><p>199it（数据导航）： <a href="http://hao.199it.com/">http://hao.199it.com/</a></p>
</li>
<li><p>雪球导航（财经工具导航）： <a href="https://xueqiu.com/dh">https://xueqiu.com/dh</a></p>
</li>
<li><p>打假导航（国家部门导航）： <a href="http://www.dajiadaohang.com/">http://www.dajiadaohang.com/</a></p>
</li>
<li><p>搜狗网址导航（地方部门导航）： <a href="http://123.sogou.com/diqu/">http://123.sogou.com/diqu/</a></p>
</li>
</ol>
<h2 id="聚合搜索平台"><a href="#聚合搜索平台" class="headerlink" title="聚合搜索平台"></a>聚合搜索平台</h2><ol>
<li><p>一个开始： <a href="https://aur.one/">https://aur.one</a> </p>
</li>
<li><p>虫部落： <a href="https://search.chongbuluo.com/">https://search.chongbuluo.com/</a></p>
</li>
</ol>
<h2 id="文件共享-一些有用的文件"><a href="#文件共享-一些有用的文件" class="headerlink" title="文件共享  一些有用的文件"></a>文件共享  一些有用的文件</h2><p><a href="https://www.wenshushu.cn/box/2yas6fh1x0n">https://www.wenshushu.cn/box/2yas6fh1x0n</a><br>共 270318 文件，总大小 6.9TB<br>这个好像也是最全的，有音乐，电影，还有一些杂七杂八的书。</p>
<p><a href="https://www.wenshushu.cn/k/3s7sn4xv958">https://www.wenshushu.cn/k/3s7sn4xv958</a><br>钥匙串取文件 wss:1j7wmCbbQNC4c6zbIYI3rnTZ0bR<br>258662 文件，总大小 5.92TB<br>这个比上一个少了些文件，当一个备用吧。</p>
<p><a href="https://www.wenshushu.cn/k/3r6nkwwznd8">https://www.wenshushu.cn/k/3r6nkwwznd8</a><br>钥匙串取文件 wss:1ixksTvCRlTD4NO0KUAXO5STuNn<br>共 36120 文件，总大小 1.62TB<br>软件，影视，音乐，教程，看了一下，应该都是免费的。</p>
<p><a href="https://wwx.lanzoux.com/b0cdvkdfa">https://wwx.lanzoux.com/b0cdvkdfa</a><br>还是有些有用的东西的，有些压缩文件的解压密码是diyiziyuan.cn，他写在了文件夹的说明里，反正要给钱的最好三思一下。</p>
<p><a href="https://www.wenshushu.cn/box/2ylgjpzumqw">https://www.wenshushu.cn/box/2ylgjpzumqw</a><br>共 17299 文件，总大小 922.05GB<br>依然是与影视，音乐，学习相关的网盘，只不过这个好像就与那个pua网站没什么关系了。</p>
<p><a href="https://www.wenshushu.cn/box/31xl9pmenod">https://www.wenshushu.cn/box/31xl9pmenod</a><br>共 2035 文件，总大小：27.1GB<br>这个网盘比较偏向一些做文书工作的人，也是比较干净的。</p>
<p><a href="https://www.wenshushu.cn/f/3yvoreh54ry">https://www.wenshushu.cn/f/3yvoreh54ry</a><br>共 69 文件，总大小 1.91GB<br>一些游戏和网站的源码。</p>
<p><a href="https://www.wenshushu.cn/box/2y9xxjki7c8">https://www.wenshushu.cn/box/2y9xxjki7c8</a><br>共 2082 文件，总大小 617.53GB<br>大部分都是手机电脑的软件。</p>
<p><a href="https://www.wenshushu.cn/box/3nwdym50ko8">https://www.wenshushu.cn/box/3nwdym50ko8</a><br>共 368 文件，总大小：102.36GB<br>虽然没分享多少，但也有有意思的东西。</p>
<p><a href="https://www.wenshushu.cn/box/3jg6qpdm27c">https://www.wenshushu.cn/box/3jg6qpdm27c</a><br>共 36124 文件，总大小 1.62TB<br>这个跟上面那个很像，但是多了4个文件，可以当个备份用。</p>
<p><a href="https://www.wenshushu.cn/f/4e032v9kjoo">https://www.wenshushu.cn/f/4e032v9kjoo</a><br>共 2851 文件，总大小：11.47GB<br>行业报告相关，随便下了一个压缩包，好像不需要密码，只不过又和那个pua网站有关，如果遇到要给钱的要先想一想。</p>
<p><a href="https://www.wenshushu.cn/f/4e02wct3mdo">https://www.wenshushu.cn/f/4e02wct3mdo</a><br>共 1955 文件，总大小：2.04TB<br>电影电视剧相关，看看有没有想看的吧。</p>
<p><a href="https://www.wenshushu.cn/f/4e022fovuoc">https://www.wenshushu.cn/f/4e022fovuoc</a><br>共 4764 文件，总大小：89.91GB<br>关于中国古代的一些事，不过好像有些东西上面那个总的pua网盘好像分享过了，当个备份吧。</p>
<p><a href="https://ws28.cn/f/4e03rvczcb0">https://ws28.cn/f/4e03rvczcb0</a><br>共 7618 文件，总大小：872.06GB<br>终身学习，加一些影视，上面的总pua网盘分享过的，当备份。</p>
<p><a href="https://ws28.cn/f/4e02humbs3w">https://ws28.cn/f/4e02humbs3w</a><br>共 370 文件，总大小：757.31MB<br>营销，上面的总pua网盘分享过的，当备份。</p>
<p><a href="https://www.wenshushu.cn/box/42r86fv95ri">https://www.wenshushu.cn/box/42r86fv95ri</a><br>共 709 文件，总大小：22.01GB<br>一些手机软件的分类，可以看看。</p>
<p><a href="https://www.wenshushu.cn/f/3kmmrpukz64">https://www.wenshushu.cn/f/3kmmrpukz64</a><br>共 9320 文件，总大小 11.04GB<br>书籍，而且好像没那个总网盘全，可以当备份。</p>
<p>转载于<a href="https://ednovas.xyz/">Ednovas的小站</a></p>
]]></content>
      <categories>
        <category>网站</category>
      </categories>
      <tags>
        <tag>网站</tag>
        <tag>学习</tag>
        <tag>资源</tag>
      </tags>
  </entry>
  <entry>
    <title>Yandex 免费域名邮箱和配置SMTP</title>
    <url>/2022/02/16/yandexdomainmail/</url>
    <content><![CDATA[<p>Outlook e5 a1 a1p等订阅可以自定义域名，但是比较复杂或者需要一些特殊手段，但是yandex mail提供免费的域名邮箱服务。这项服务叫做Yandex Connect，免费提供1000个子邮箱，每个子邮箱10G容量。查阅过官方文档，并没有找到明确解释，但是外网网友据说每个邮箱有每天3000封邮件的发件限制，相比QQ、Gmail这些只有每日500封的已经很厉害了。而且注册极其容易。此外还有SPF/DIKM配置能十分有效的防止邮件进入垃圾箱的概率。</p>
<h2 id="注册主账号"><a href="#注册主账号" class="headerlink" title="注册主账号"></a>注册主账号</h2><p>就类似Office E5一样，需要一个主要的管理员账户，就是直接去yandex官网注册个即可 </p>
<p><a href="https://passport.yandex.com/registration">https://passport.yandex.com/registration</a></p>
<p>可以使用手机号或者安全问题两种方式注册，实测国内 +86 手机号可以验证。GV貌似也可行。</p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p><a href="https://connect.yandex.com/pdd/">https://connect.yandex.com/pdd/</a></p>
<p>上述链接是原来的界面，但是现在yandex connect改版了，免费的yandex connect入口被藏起来了，需要去</p>
<p><a href="https://connect.yandex.com/portal/admin/domains">https://connect.yandex.com/portal/admin/domains</a> 页面，然后就会提示你的账户还不是yandex connect计划，这样就可以选择直接加入免费的yandex connect计划（右上角账户那个地方确认加入yandex connect）。</p>
<p><a href="https://admin.yandex.ru/">https://admin.yandex.ru/</a> 页面可以再次回到管理页面（类似Microsoft Admin一样）</p>
<h2 id="验证域名"><a href="#验证域名" class="headerlink" title="验证域名"></a>验证域名</h2><p>你可以直接更改 ns 记录到yandex的（不推荐）</p>
<p>或者</p>
<p>使用dns验证，按照他的要求配置域名的MX记录、SPF 与 DKIM的TXT记录</p>
<p>直到显示如下图所示的 Domain Configured 即全部完成了</p>
<p><img src="https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/Snipaste_2022-02-08_17-38-56.jpg"></p>
<h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><p>Users内添加用户即可，Language记得选择English，除非你看的懂俄文。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/Snipaste_2022-02-08_17-40-14.jpg"></p>
<p>这样就可以设置为管理员用户了，下次就可以直接用这个账户登录<a href="https://admin.yandex.ru/">admin页面</a>了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/Snipaste_2022-02-08_17-42-26.jpg"></p>
<h2 id="配置SMTP"><a href="#配置SMTP" class="headerlink" title="配置SMTP"></a>配置SMTP</h2><p>转到Email中，选择设置，然后Email clients，把 <code>From the imap.yandex.com server via IMAP</code> 和 <code>App passwords and OAuth tokens</code> 打开并保存。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/Snipaste_2022-02-08_17-44-50.jpg"></p>
<p>右上角选择账户管理</p>
<p><img src="https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/Snipaste_2022-02-08_17-46-17.jpg"></p>
<p>往下拉，选择 <code>Passwords and authorization</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/Snipaste_2022-02-08_17-47-54.jpg"></p>
<p><img src="https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/Snipaste_2022-02-08_17-48-15.jpg"></p>
<p>创建APP 密钥，一定要保存下来。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/Snipaste_2022-02-08_17-48-37.jpg"></p>
<p>配置SMTP的话，就是</p>
<p>SMTP服务器地址：smtp.yandex.com</p>
<p>SMTP端口：465</p>
<p>SMTP加密方式：SSL</p>
<p>SMTP账户：你的yandex邮箱（确保mail的设置中开启了IMAP）</p>
<p>SMTP密码：你刚刚设置的APP Passwords  </p>
<p>转载于 <a href="https://ednovas.xyz/">Ednovas的博客</a></p>
]]></content>
      <tags>
        <tag>IT</tag>
        <tag>Yandex</tag>
        <tag>域名邮箱</tag>
        <tag>邮箱</tag>
      </tags>
  </entry>
  <entry>
    <title>Freenom 域名自动续期bot</title>
    <url>/2022/02/16/freenomextend/</url>
    <content><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/luolongfei/next-freenom">https://github.com/luolongfei/next-freenom</a></p>
<h2 id="docker部署（最方便）"><a href="#docker部署（最方便）" class="headerlink" title="docker部署（最方便）"></a>docker部署（最方便）</h2><h3 id="基础设置"><a href="#基础设置" class="headerlink" title="基础设置"></a>基础设置</h3><p>升级源和软件并安装wget和vim</p>
<p>然后自动安装docker</p>
<p>Debian/Ubunt:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y wget vim</span><br><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure>

<p>CentOS:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum update &amp;&amp; yum install -y wget vim</span><br></pre></td></tr></table></figure>

<p>请使用 KVM 架构的 VPS，OpenVZ 架构的 VPS 不支持安装 Docker，另外 CentOS 8 不支持用此脚本来安装 Docker。 更多关于 Docker 安装的内容参考 <a href="https://docs.docker.com/engine/install/">Docker 官方安装指南</a> 。</p>
<p>检查docker是否安装成功并已经添加环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure>

<p>启动 Docker 服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>


<p>查看 Docker 运行状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure>


<p>将 Docker 服务加入开机自启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure>


<h3 id="用-Docker-创建并启动容器"><a href="#用-Docker-创建并启动容器" class="headerlink" title="用 Docker 创建并启动容器"></a>用 Docker 创建并启动容器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --name freenom --restart always -v $(pwd):/conf -v $(pwd)/logs:/app/logs luolongfei/freenom</span><br></pre></td></tr></table></figure>

<p>或者，如果你想自定义脚本执行时间，则命令如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --name freenom --restart always -v $(pwd):/conf -v $(pwd)/logs:/app/logs -e RUN_AT=&quot;11:24&quot; luolongfei/freenom</span><br></pre></td></tr></table></figure>


<p>上面这条命令只比上上条命令多了个 -e RUN_AT=”11:24”，其中11:24表示在北京时间每天的 11:24 执行续期任务，你可以自定义这个时间。 这里的RUN_AT参数同时也支持 CRON 命令里的时间形式，比如， -e RUN_AT=”9 11 * * *”，表示每天北京时间 11:09 执行续期任务， 如果你不想每天执行任务，只想隔几天执行，只用修改RUN_AT的值即可。</p>
<p>注意：不推荐自定义脚本执行时间。因为你可能跟很多人定义的是同一个时间点，这样可能导致所有人都是同一时间向 Freenom 的服务器发起请求， 使得 Freenom 无法稳定提供服务。而如果你不自定义时间，程序会自动指定北京时间 06 ~ 23 点全时段随机的一个时间点作为执行时间， 每次重启容器都会自动重新指定。</p>
<p>上方 Docker 命令的参数解释</p>
<table>
<thead>
<tr>
<th align="left">命令</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">docker run</td>
<td align="left">开始运行一个容器</td>
</tr>
<tr>
<td align="left">-d 参数</td>
<td align="left">容器以后台运行并输出容器 ID</td>
</tr>
<tr>
<td align="left">–name 参数</td>
<td align="left">给容器分配一个识别符，方便将来的启动，停止，删除等操作</td>
</tr>
<tr>
<td align="left">–restart 参数</td>
<td align="left">配置容器启动类型，always 即为 docker 服务重新启动时自动启动本容器</td>
</tr>
<tr>
<td align="left">-v 参数</td>
<td align="left">挂载卷（volume），冒号后面是容器的路径，冒号前面是宿主机的路径（只支持绝对路径），$(pwd)表示当前目录</td>
</tr>
<tr>
<td align="left">-e 参数</td>
<td align="left">指定容器中的环境变量</td>
</tr>
<tr>
<td align="left">luolongfei/freenom</td>
<td align="left">这是从 docker hub 下载回来的镜像完整路径名</td>
</tr>
</tbody></table>
<p>执行<code>ls -a</code>后你就可以看到在你的当前目录下，有一个.env文件和一个logs目录，logs目录里面存放的是程序日志， 而.env则是配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim .env</span><br></pre></td></tr></table></figure>

<p>修改.env内的配置信息然后重启容器</p>
<table>
<thead>
<tr>
<th align="left">变量名</th>
<th align="left">含义</th>
<th align="left">默认值</th>
<th align="left">是否必须</th>
<th align="left">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="left">FREENOM_USERNAME</td>
<td align="left">Freenom 账户</td>
<td align="left">-</td>
<td align="left">是</td>
<td align="left">只支持邮箱账户，如果你是使用第三方社交账户登录的用户，请在 Freenom 管理页面绑定邮箱，绑定后即可使用邮箱账户登录</td>
</tr>
<tr>
<td align="left">FREENOM_PASSWORD</td>
<td align="left">Freenom 密码</td>
<td align="left">-</td>
<td align="left">是</td>
<td align="left">某些特殊字符可能需要转义，详见.env文件内注释</td>
</tr>
<tr>
<td align="left">MULTIPLE_ACCOUNTS</td>
<td align="left">多账户支持</td>
<td align="left">-</td>
<td align="left">否</td>
<td align="left">多个账户和密码的格式必须是“&lt;账户1&gt;@&lt;密码1&gt;</td>
</tr>
<tr>
<td align="left">MAIL_USERNAME</td>
<td align="left">机器人邮箱账户</td>
<td align="left">-</td>
<td align="left">是</td>
<td align="left">支持Gmail、QQ邮箱以及163邮箱，尽可能使用163邮箱或者QQ邮箱而非Gmail。因为谷歌的安全机制，每次在新设备登录 Gmail 都会先被限制，需要手动解除限制才行。具体的配置方法参考「 配置发信邮箱 」</td>
</tr>
<tr>
<td align="left">MAIL_PASSWORD</td>
<td align="left">机器人邮箱密码</td>
<td align="left">-</td>
<td align="left">是</td>
<td align="left">Gmail填密码，QQ邮箱或163邮箱填授权码</td>
</tr>
<tr>
<td align="left">TO</td>
<td align="left">接收通知的邮箱</td>
<td align="left">-</td>
<td align="left">是</td>
<td align="left">你自己最常用的邮箱，推荐使用QQ邮箱，用来接收机器人邮箱发出的域名相关邮件</td>
</tr>
<tr>
<td align="left">MAIL_ENABLE</td>
<td align="left">是否启用邮件推送功能</td>
<td align="left">true</td>
<td align="left">否</td>
<td align="left">true：启用 false：不启用 默认启用，如果设为false，不启用邮件推送功能，则上面的MAIL_USERNAME、MAIL_PASSWORD、TO变量变为非必须，可不设置</td>
</tr>
<tr>
<td align="left">TELEGRAM_CHAT_ID</td>
<td align="left">你的chat_id</td>
<td align="left">-</td>
<td align="left">否</td>
<td align="left">通过发送/start给@userinfobot可以获取自己的id</td>
</tr>
<tr>
<td align="left">TELEGRAM_BOT_TOKEN</td>
<td align="left">你的Telegram bot的token</td>
<td align="left">-</td>
<td align="left">否</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">TELEGRAM_BOT_ENABLE</td>
<td align="left">是否启用Telegram Bot推送功能</td>
<td align="left">false</td>
<td align="left">否</td>
<td align="left">true：启用 false：不启用 默认不启用，如果设为true，则必须设置上面的TELEGRAM_CHAT_ID和TELEGRAM_BOT_TOKEN变量</td>
</tr>
<tr>
<td align="left">NOTICE_FREQ</td>
<td align="left">通知频率</td>
<td align="left">1</td>
<td align="left">否</td>
<td align="left">0：仅当有续期操作的时候 1：每次执行</td>
</tr>
</tbody></table>
<p>修改并保存.env文件后，执行<code>docker restart freenom</code>重启容器，等待 5 秒钟左右</p>
<p>然后执行<code>docker logs freenom</code>查看输出内容</p>
<p>输出内容中有执行成功字样，则表示配置无误。</p>
<h3 id="其他docker常用命令"><a href="#其他docker常用命令" class="headerlink" title="其他docker常用命令"></a>其他docker常用命令</h3><p>查看容器在线状态及大小</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps -as</span><br></pre></td></tr></table></figure>

<p>查看容器的运行输出日志</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker logs freenom</span><br></pre></td></tr></table></figure>


<p>重新启动容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker restart freenom</span><br></pre></td></tr></table></figure>

<p>停止容器的运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker stop freenom</span><br></pre></td></tr></table></figure>

<p>移除容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker rm $name</span><br></pre></td></tr></table></figure>

<p>查看 docker 容器占用 CPU，内存等信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker stats --no-stream</span><br></pre></td></tr></table></figure>

<h2 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h2><p>@ednovas_freenom_bot  </p>
<p>转载于 <a href="https://ednovas.xyz/">Ednovas的博客</a></p>
]]></content>
      <tags>
        <tag>IT</tag>
        <tag>Freenom</tag>
        <tag>免费域名</tag>
        <tag>续期</tag>
      </tags>
  </entry>
  <entry>
    <title>搜索引擎列表</title>
    <url>/2022/02/15/search-engines-list/</url>
    <content><![CDATA[<blockquote>
<p>转载自 Aegisprogram <a href="https://aegisprogram.github.io/posts/3038875764.html">https://aegisprogram.github.io/posts/3038875764.html</a></p>
</blockquote>
<p>搜索引擎已经成为我们上网活动中必不可少的一部分，像大家熟知的国外的Google，中国的百度，这些都已经成为人们从网上获取信息的重要工具。很多人苦于百度的广告，但是又对国内无法使用Google搜索而感到无奈（科学上网有一定的门槛，所以只有少部分人才会的）。搜索引擎发展至今，到现在搜索引擎市场也诞生了不少的“优秀分子”，下面我将对这些搜索引擎进行盘点。</p>
<p>提示：下面的搜索引擎盘点中并不会包含百度等其他的一些国内的乱七八糟的搜索引擎，国内百度并不是说不能用，只是觉得我要的信息是要在广告里面找出来的，这很耽误时间。其他的像360搜索之类的搜索服务做的还不如百度，也就没有列举的必要了。</p>
<span id="more"></span>

<h2 id="Magi"><a href="#Magi" class="headerlink" title="Magi"></a><a href="https://magi.com/">Magi</a></h2><p>Magi 是由 Peak Labs研发的基于机器学习的信息抽取和检索系统，它能将任何领域的自然语言文本中的知识提取成结构化的数据，通过终身学习持续聚合和纠错，进而为人类用户和其他人工智能提供<strong>可解析</strong>、<strong>可检索</strong>、<strong>可溯源</strong>的知识体系。</p>
<p>总而言之一句话，基于机器学习的搜索引擎。提供结果的同时还会列举出自己的学习来源。在国内来说值得一试。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/magi.242eccywj7wg.png" alt="image"></p>
<h2 id="Bing"><a href="#Bing" class="headerlink" title="Bing"></a>Bing</h2><p>国内版/大陆国际版：<a href="https://cn.bing.com/">https://cn.bing.com</a></p>
<p>原生bing：<a href="https://www.bing.com/">https://www.bing.com</a></p>
<p>相信你已经看出来了，是的，bing虽说有三个版本，但是上面两个版本是大陆的定制版，搜索页面下方是有公安备案的，海外原生bing是没有备案的，这是两者外观上很显著的差别。当大陆地区使用bing的时候，就会被强制重定向到cn.bing.com——也就是国内定制版bing。但是，虽说是大陆定制版，搜索的效率和结果比百度逊色不了多少，而且结果中广告更少。在国内不失为一个好用的搜索引擎。</p>
<p>关于两者的域名问题可以查阅<a href="https://zh.wikipedia.org/zh-cn/Microsoft_Bing#%E5%9F%9F%E5%90%8D">这里</a></p>
<p>两者之间的区别则可以查阅<a href="https://zh.wikipedia.org/zh-cn/Microsoft_Bing#%E7%BD%91%E7%BB%9C%E5%AE%A1%E6%9F%A5">这里</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/bing.72texs8qw440.png" alt="image"></p>
<p>注意：下面的搜索引擎大多数国内都无法访问，如果点击链接没有打开页面，那就证明已经被GFW拦截了。</p>
<h2 id="Google"><a href="#Google" class="headerlink" title="Google"></a><a href="https://www.google.com/">Google</a></h2><p>海外使用人数最大的搜索引擎，搜索引擎界的老大哥。搜索效率高，广告少，准确率高。但是国内大陆地区无法访问和使用。但是会追踪用户，分析用户行为，收集用户信息用于投放广告。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/google.247io1p259ds.png" alt="image"></p>
<h2 id="DuckDuckgo"><a href="#DuckDuckgo" class="headerlink" title="DuckDuckgo"></a><a href="https://duckduckgo.com/">DuckDuckgo</a></h2><p>注重用户隐私，及避免<a href="https://zh.wikipedia.org/wiki/%E4%B8%AA%E6%80%A7%E5%8C%96%E6%A3%80%E7%B4%A2">个性化检索</a>所致的<a href="https://zh.wikipedia.org/wiki/%E9%81%8E%E6%BF%BE%E6%B0%A3%E6%B3%A1">过滤气泡</a>，它与其他搜索引擎不同的地方在于其不会分析自己的用户、对所有使用同一组关键词的用户显示同样的结果。它也强调返回最佳结果，而不是最多网站链接的结果。之前国内的多吉搜索也是这般倡导不打扰，不追踪，但是在今年两会期间就凉了，类似的还有秘迹搜索。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/duckduckgo.3n8bhbvjyjk0.png" alt="image"></p>
<h2 id="Startpage"><a href="#Startpage" class="headerlink" title="Startpage"></a><a href="https://www.startpage.com/">Startpage</a></h2><p>Startpage为一荷兰公司Startpage B.V.所推出的搜寻引擎服务,Startpage后台使用Google搜索API，所以具有跟Google本身相同的搜索质量。但是它发给Google服务器的只有搜索关键字，Google不会获取到除此以外的<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5">头字段</a>和<a href="https://zh.wikipedia.org/wiki/Cookie">cookie</a>等信息。因此，startpage在用户隐私保护方面同样出色。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/startpage.43l4t8mgf140.png" alt="image"></p>
<h2 id="Qwant"><a href="#Qwant" class="headerlink" title="Qwant"></a><a href="https://www.qwant.com/">Qwant</a></h2><p>Qwant是由法国打造专业搜索引擎的法国企业Pertimm和信息安全专家ÉricLeandri合作创建的一个搜索引擎，以15种语言面向35个国家开放。Qwant执行非常严格的隐私条例，保证绝不获取使用者的任何信息，也不会在用户浏览网站时，搭载任何可能泄露使用者身份及位置的Cookies（小型文本）文件。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/qwant.1wkib4tta1ds.png" alt="image"></p>
<h2 id="Ecosia"><a href="#Ecosia" class="headerlink" title="Ecosia"></a><a href="https://www.ecosia.org/">Ecosia</a></h2><p>Ecosia是一个总部位于德国柏林的搜索引擎，他们将至少80%的利润捐赠给非营利利组织，用于种植树木。Ecosia致力于保护用户隐私。搜索会被加密，不会永久存储，Ecosia也不会将数据出售给第三方广告商。Ecosia在隐私政策中声明，它不创建基于搜索历史记录的个人配置文件，也不使用任何诸如<a href="https://zh.wikipedia.org/wiki/Google%E5%88%86%E6%9E%90">Google分析</a>的外部跟踪工具。截止2020年7月，Ecosia种植的树木总数已超过1亿株，每月从大气中吸收超过5万吨的二氧化碳。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/ecosia.14vmmg743oh.png" alt="image"></p>
<h2 id="Metager"><a href="#Metager" class="headerlink" title="Metager"></a><a href="https://metager.org/">Metager</a></h2><p>MetaGer是基于德国的基于隐私的搜索引擎。与“startpage”一样，MetaGer也使用代理服务器技术在访问网站时隐藏用户的位置。在MetaGer上搜索字词时，用户会在每个结果下方看到一个名为“匿名打开”的附加选项。”单击后，MetaGer将设置代理服务器并通过它定向到你想要的网站。因为MetaGer是查询的来源，所以用户的访问仍然是匿名的,同时MetaGer是以捐赠为支持的非营利组织。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/metager.2q8xw6no3a80.png" alt="image"></p>
<h2 id="peeker"><a href="#peeker" class="headerlink" title="peeker"></a><a href="https://peekier.com/">peeker</a></h2><p> Peeker 是一种搜索网页的新方法。 在尊重你隐私的搜索引擎上快速安全地查看搜索结果。与一般搜索引擎不同的是，peeker采用宫格图方式展现搜索结果，这样的方式有利于用户预览网页内容。同时也是具有严格的隐私政策。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/peeker.646yj12q8ao0.png" alt="image"></p>
<h2 id="Searx"><a href="#Searx" class="headerlink" title="Searx"></a>Searx</h2><p>Searx，一个基于<code>Python</code>的完全开源免费搜索引擎平台，为你提供来自Google、Bing、Yahoo等<code>70</code>多种各大视频、图片、搜索、磁力等网站结果展示，并对搜索结果进行优化，同时不会存储你的任何搜索信息。支持用户自行<a href="https://searx.github.io/searx/">安装搭建</a>。如果自己暂时没有这个想法或者能力地话，那么这里有一份searx的<a href="https://searx.space/">公开站台</a>可以使用。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/Searx.2k6cnfg74du0.png" alt="image"></p>
<h2 id="Yacy"><a href="#Yacy" class="headerlink" title="Yacy"></a><a href="https://yacy.net/">Yacy</a></h2><p>YaCy是一个基于<a href="https://zh.wikipedia.org/zh/%E5%B0%8D%E7%AD%89%E7%B6%B2%E8%B7%AF">p2p</a>的分布式开源免费的网页搜索引擎系统，任何人都可以用YaCy为自己建立个人的搜索门户，以实现信息的自由共享。YaCy采用多种机制保护用户的隐私，YaCy网络基于<a href="https://zh.wikipedia.org/wiki/%E7%82%B9%E5%AF%B9%E7%82%B9">点对点</a>连接，而不是通过中央服务器进行搜索查询，保证内容不被审查，而且所有的搜索请求都被加密，搜索结果不会被中央服务器记录和分析。由于该搜索引擎是基于Java语言进行开发的，所以安装Yacy程序之前必须保证自己的电脑已经安装了Java。总的来说，这个搜索引擎对于新手极为不友好，上手难度高，门槛高，但是搜索能力和隐私保护能力却是一流的。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/yacy.cam0rp26uls.png" alt="image"></p>
<h2 id="Yandex"><a href="#Yandex" class="headerlink" title="Yandex"></a><a href="https://yandex.com/">Yandex</a></h2><p>Yandex搜索引擎是俄罗斯Yandex公司开发的一款搜索引擎，Yandex是目前世界第五大搜索引擎，在俄国内拥有逾60%的市场占有率，也是欧洲市场上较为流行的搜索引擎。由于搜索引擎结果经常会混杂大量的俄语，所以对于中文用户来说体验并不算太好。但是，国内似乎可以正常地访问。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/Yandex.6qn1wyl5n0c0.png" alt="image"></p>
<h2 id="OneSearch"><a href="#OneSearch" class="headerlink" title="OneSearch"></a><a href="https://www.onesearch.com/">OneSearch</a></h2><p>OneSearch实际上并不是一款全新的搜索引擎，相反，它是一个基于微软Bing定制的搜索引擎。 这款引擎的主要亮点是它不会对用户进行追踪、储存他们的数据或跟广告商分享用户个人或搜索数据。换言之，用户的个人信息基本不会被出售第三方。但是OneSearch也依赖广告盈利。不过它不是根据cookie或用户浏览历史而是通过搜索关键字等因素显示情景广告。如果使用了高级隐私模式的用户，该搜索引擎的结果链接将会在一小时后失效。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/onesearch.2uuk33zgnu00.png" alt="image"></p>
<h2 id="BraveSearch"><a href="#BraveSearch" class="headerlink" title="BraveSearch"></a><a href="https://search.brave.com/">BraveSearch</a></h2><p>这是brave公司刚推出不久的搜索引擎，目前还是beta阶段，对于中文的部分检索词不是很准确。但是界面美观，没有明显的广告，不分析用户行为，也不追踪用户，也是一款注重用户隐私的搜索引擎。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/brave.2d9fmzrypglc.png" alt="image"></p>
<h2 id="Oscobo"><a href="#Oscobo" class="headerlink" title="Oscobo"></a><a href="https://www.oscobo.com/">Oscobo</a></h2><p>Oscobo是专门为了保护用户隐私而创立的搜索引擎，它不会跟踪用户信息。对用户的搜索字词完全加密，因此只有用户自己知道搜索的内容，对于中文搜索也算还可以，值得试试。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/oscobo.4kp4hbvgdsw0.png" alt="image"></p>
<h2 id="Discrete-Search"><a href="#Discrete-Search" class="headerlink" title="Discrete Search "></a><a href="https://www.discretesearch.com/">Discrete Search </a></h2><p>Discrete Search 是一种元搜索引擎，不会跟踪任何可识别的信息。对于那些以干净和用户友好的形式寻求快速结果的人来说，这是一个不错的选择。它使用端到端加密来使您的搜索尽可能保密。但是对于中文搜索极为不友好，不适合用来检索中文关键词。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/discretes.9io5a2lowag.png" alt="image"></p>
<h2 id="Swisscows"><a href="#Swisscows" class="headerlink" title="Swisscows"></a><a href="https://swisscows.com/">Swisscows</a></h2><p>这是一款由瑞士Hulbee AG 科技公司开发的语义搜索引擎，它使用人工智能和机器学习来评估用户搜索的上下文，同时与前面的隐私保护搜索引擎一样，它并不会收集用户的任何信息，对于中文关键词检索的支持也很友好。唯一的问题就是搜索引擎主页有广告。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/swisscows.gmhadb26sns.png" alt="image"></p>
<h2 id="gibiru"><a href="#gibiru" class="headerlink" title="gibiru"></a><a href="https://gibiru.com/">gibiru</a></h2><p>Gibiru 是从改进的 Google 算法中获取搜索结果，为用户提供可靠的结果。它不会在您的系统上安装各种个性化和跟踪 cookie。同样也是注重用户隐私的搜索引擎。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/gibiru.37gkptk7mmu0.png" alt="image"></p>
<h2 id="Search-Encrypt"><a href="#Search-Encrypt" class="headerlink" title="Search Encrypt"></a><a href="https://www.searchencrypt.com/home">Search Encrypt</a></h2><p>Search Encrypt 使用本地加密来保护您的搜索。它结合了 AES-256 加密和安全套接字层加密。搜索加密然后从其搜索合作伙伴网络中检索您的搜索结果。完成搜索后，即使其他人可以访问您的计算机，您的搜索字词也会过期，因此它们是私密的，用户无需担心自己的搜索内容被他人窥探。唯一的不足就是搜索引擎主页有广告存在。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/search.264xomzokly8.png" alt="image"></p>
<p>从效率上来说：在海量信息时代，一个优秀的搜索引擎总是能让我们事半功倍。</p>
<p>从安全隐私上来说：在互联网公司虎视眈眈下，一个注重用户隐私的搜索引擎能在我们保护个人隐私时助我们一臂之力。</p>
<p>我没法说哪一个搜索引擎是最优秀的，因为它们各有千秋，我们各取所需。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>相关词条参考于维基百科同名词条以及各自的官方说明文档/博客。  </p>
<p>转载于 <a href="https://ednovas.xyz/">Ednovas的小站</a></p>
]]></content>
      <tags>
        <tag>IT</tag>
        <tag>search</tag>
        <tag>搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建度盘链接解析网站</title>
    <url>/2022/01/30/pandownphp/</url>
    <content><![CDATA[<h1 id="GitHub开源项目地址：https-github-com-yuantuo666-baiduwp-php-感谢大佬开源！"><a href="#GitHub开源项目地址：https-github-com-yuantuo666-baiduwp-php-感谢大佬开源！" class="headerlink" title="GitHub开源项目地址：https://github.com/yuantuo666/baiduwp-php 感谢大佬开源！"></a>GitHub开源项目地址：<a href="https://github.com/yuantuo666/baiduwp-php">https://github.com/yuantuo666/baiduwp-php</a> 感谢大佬开源！</h1><h2 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h2><p>Centos安装命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure>

<p>试验性Centos/Ubuntu/Debian安装命令 独立运行环境（py3.7） 可能存在少量兼容性问题 不断优化中  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sSO http://download.bt.cn/install/install_panel.sh &amp;&amp; bash install_panel.sh</span><br></pre></td></tr></table></figure>

<p>Ubuntu/Deepin安装命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure>

<p>Debian安装命令：<br><code>wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></p>
<p>Fedora安装命令:<br><code>wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</code></p>
<p>安装网站配置相关（默认配置极速安装即可）</p>
<h2 id="网站证书"><a href="#网站证书" class="headerlink" title="网站证书"></a>网站证书</h2><p>宝塔网站内添加已经解析了的域名，并申请SSL证书，强制启用https</p>
<h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p><a href="https://github.com/yuantuo666/baiduwp-php">https://github.com/yuantuo666/baiduwp-php</a></p>
<p>前往release复制安装包地址，宝塔网站目录下远程下载，并解压</p>
<p>或者在ssh中使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/yuantuo666/baiduwp-php.git</span><br></pre></td></tr></table></figure>
<p>下载源码到网站目录，并解压</p>
<h2 id="获取SVIP-cookies"><a href="#获取SVIP-cookies" class="headerlink" title="获取SVIP cookies"></a>获取SVIP cookies</h2><p>登录百度网盘网页版，点击小锁，获取 cookie 中的 </p>
<p>baidu.com 下的 BDUSS 和 pan.baidu.com 下的 STOKEN </p>
<p>获取域名错误可能导致账号无法正常登录</p>
<h2 id="修改源码配置文件"><a href="#修改源码配置文件" class="headerlink" title="修改源码配置文件"></a>修改源码配置文件</h2><p>config.php 中，按照要求把非SVIP账号的BDUSS和STOKEN输入进去（这里直接用SVIP账号也可以）</p>
<p>SVIP_BDUSS 复制上SVIP的BUDSS</p>
<p>可以设置解析密码</p>
<h2 id="数据库​"><a href="#数据库​" class="headerlink" title="数据库​"></a>数据库​</h2><p>最新两个版本支持导入sql数据库，用于方便添加更多SVIP账号并且自动检测限速。</p>
<h2 id="Demo（找网站的直接看这里）"><a href="#Demo（找网站的直接看这里）" class="headerlink" title="Demo（找网站的直接看这里）"></a>Demo（找网站的直接看这里）</h2><p>请勿分享，还请自用</p>
<p><a href="https://pan.ednovas.xyz/">https://pan.ednovas.xyz/</a></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>IDM 选项 -&gt; 下载 -&gt; 手动添加任务时使用的用户代理（UA） -&gt; 填入 <code>LogSta­tis­tic</code></p>
<p><a href="/2020/12/21/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E3%80%81%E8%A7%86%E9%A2%91%E6%8A%93%E5%8F%96%E8%BD%AF%E4%BB%B6idm">IDM使用指南</a></p>
<p>推荐直接使用Aria2下载</p>
<p><a href="/2020/12/21/%E9%AB%98%E9%80%9F%E8%BD%BB%E9%87%8F%E4%B8%8B%E8%BD%BD%E5%99%A8aria2">aria2使用指南</a></p>
<blockquote>
<p>参考文章 <a href="https://github.com/yuantuo666/baiduwp-php">https://github.com/yuantuo666/baiduwp-php</a> <a href="https://betterman.xyz/455.html">https://betterman.xyz/455.html</a></p>
</blockquote>
<p>转载于 <a href="https://ednovas.xyz/">Ednovas的小站</a></p>
]]></content>
      <categories>
        <category>下载</category>
        <category>建站</category>
      </categories>
      <tags>
        <tag>IT</tag>
        <tag>网盘</tag>
        <tag>百度</tag>
        <tag>解析</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Cloudflare搭建一个短链接生成器网站</title>
    <url>/2022/02/21/cfshorturl/</url>
    <content><![CDATA[<p>如何免费搭建一个短链接生成器而且不需要服务器</p>
<h2 id="提前准备"><a href="#提前准备" class="headerlink" title="提前准备"></a>提前准备</h2><p><code>一个邮箱</code>  </p>
<p><code>一个Cloudflare账号</code>  </p>
<p><code>一个域名（可以是freenom的免费域名）</code>  </p>
<h2 id="步骤大纲"><a href="#步骤大纲" class="headerlink" title="步骤大纲"></a>步骤大纲</h2><p><code>登录Cloudflare账号</code>  </p>
<p><code>添加网站到Cloudflare</code>  </p>
<p><code>创建KV空间</code>  </p>
<p><code>创建Worker</code>  </p>
<p><code>部署Worker</code>  </p>
<p><code>完成</code>  </p>
<hr>
<blockquote>
<p>登录账号的话我就不说了大家都会…</p>
</blockquote>
<h2 id="添加域名到Cloudflare"><a href="#添加域名到Cloudflare" class="headerlink" title="添加域名到Cloudflare"></a>添加域名到Cloudflare</h2><p>点击”添加站点”,之后输入freenom注册好的域名,点击”确定”,根据提示修改ns地址,添加完后等待大约2~4小时再继续下一步  </p>
<h2 id="创建KV空间"><a href="#创建KV空间" class="headerlink" title="创建KV空间"></a>创建KV空间</h2><p>首先进入此[网站]（<a href="https://dash.cloudflare.com/9846dca058eb6dee366f7ba4b00e1d1e/workers/kv/namespaces%EF%BC%89">https://dash.cloudflare.com/9846dca058eb6dee366f7ba4b00e1d1e/workers/kv/namespaces）</a>  </p>
<img src="https://cdn.jsdelivr.net/gh/cycxtIT/all/img/01.jpg" width="600">

<p>之后再随机填写一个名称如图</p>
<img src="https://cdn.jsdelivr.net/gh/cycxtIT/all/img/02.jpg" width="600">

<p>最后点击 “添加”</p>
<h2 id="创建Worker"><a href="#创建Worker" class="headerlink" title="创建Worker"></a>创建Worker</h2><p>回到这个<a href="https://dash.cloudflare.com/9846dca058eb6dee366f7ba4b00e1d1e/workers/overview">网站</a>  </p>
<p>点击”创建服务”  </p>
<p>之后填写服务名称（随便填就行了）  </p>
<p>选择启动器选择 “简介（HTTP 处理程序）”  </p>
<p>点击 “创建服务”</p>
<blockquote>
<p>如果出现提示要求你设置子域名的话根据提示设置即可</p>
</blockquote>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>创建玩服务后,进入服务  </p>
<p>点击 “设置” 选项,再选择 “变量” 找到 “KV 命名空间绑定”  </p>
<p>点击编辑变量（KV 命名空间绑定的右上方）  </p>
<p>VARIABLE_NAME那儿填写 <code>LINKS</code> ,等于后边的”选择…”选择刚刚创建好的 KV命名空间  </p>
<p>点击 “保存”</p>
<p>之后,在上方找到”触发器”选项,点击”添加路由”,路由填写刚刚申请Freenom域名 （以 /* 结尾）  </p>
<p>最后点击”添加路由”  </p>
<h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><p>点击上方的”资源”选项,点击”快速部署”  </p>
<p>把编辑器的内容清空,把以下代码粘贴到编辑器  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const config = &#123;</span><br><span class="line">no_ref: &quot;off&quot;, //Control the HTTP referrer header, if you want to create an anonymous link that will hide the HTTP Referer header, please set to &quot;on&quot; .</span><br><span class="line">theme:&quot;&quot;,//Homepage theme, use the empty value for default theme. To use urlcool theme, please fill with &quot;theme/urlcool&quot; .</span><br><span class="line">cors: &quot;on&quot;,//Allow Cross-origin resource sharing for API requests.</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const html404 = `&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h1&gt;404 Not Found.&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;`</span><br><span class="line"></span><br><span class="line">let response_header=&#123;</span><br><span class="line">  &quot;content-type&quot;: &quot;text/html;charset=UTF-8&quot;,</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">if (config.cors==&quot;on&quot;)&#123;</span><br><span class="line">  response_header=&#123;</span><br><span class="line">  &quot;content-type&quot;: &quot;text/html;charset=UTF-8&quot;,</span><br><span class="line">  &quot;Access-Control-Allow-Origin&quot;:&quot;*&quot;,</span><br><span class="line">  &quot;Access-Control-Allow-Methods&quot;: &quot;POST&quot;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function randomString(len) &#123;</span><br><span class="line">　　len = len || 6;</span><br><span class="line">　　let $chars = &#x27;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678&#x27;;    /****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/</span><br><span class="line">　　let maxPos = $chars.length;</span><br><span class="line">　　let result = &#x27;&#x27;;</span><br><span class="line">　　for (i = 0; i &lt; len; i++) &#123;</span><br><span class="line">　　　　result += $chars.charAt(Math.floor(Math.random() * maxPos));</span><br><span class="line">　　&#125;</span><br><span class="line">　　return result;</span><br><span class="line">&#125;</span><br><span class="line">async function checkURL(URL)&#123;</span><br><span class="line">    let str=URL;</span><br><span class="line">    let Expression=/http(s)?:\/\/([\w-]+\.)+[\w-]+(\/[\w- .\/?%&amp;=]*)?/;</span><br><span class="line">    let objExp=new RegExp(Expression);</span><br><span class="line">    if(objExp.test(str)==true)&#123;</span><br><span class="line">      if (str[0] == &#x27;h&#x27;)</span><br><span class="line">        return true;</span><br><span class="line">      else</span><br><span class="line">        return false;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line">async function save_url(URL)&#123;</span><br><span class="line">    let random_key=await randomString()</span><br><span class="line">    let is_exist=await LINKS.get(random_key)</span><br><span class="line">    console.log(is_exist)</span><br><span class="line">    if (is_exist == null)</span><br><span class="line">        return await LINKS.put(random_key, URL),random_key</span><br><span class="line">    else</span><br><span class="line">        save_url(URL)</span><br><span class="line">&#125;</span><br><span class="line">async function handleRequest(request) &#123;</span><br><span class="line">  console.log(request)</span><br><span class="line">  if (request.method === &quot;POST&quot;) &#123;</span><br><span class="line">    let req=await request.json()</span><br><span class="line">    console.log(req[&quot;url&quot;])</span><br><span class="line">    if(!await checkURL(req[&quot;url&quot;]))&#123;</span><br><span class="line">    return new Response(`&#123;&quot;status&quot;:500,&quot;key&quot;:&quot;: Error: Url illegal.&quot;&#125;`, &#123;</span><br><span class="line">      headers: response_header,</span><br><span class="line">    &#125;)&#125;</span><br><span class="line">    let stat,random_key=await save_url(req[&quot;url&quot;])</span><br><span class="line">    console.log(stat)</span><br><span class="line">    if (typeof(stat) == &quot;undefined&quot;)&#123;</span><br><span class="line">      return new Response(`&#123;&quot;status&quot;:200,&quot;key&quot;:&quot;/`+random_key+`&quot;&#125;`, &#123;</span><br><span class="line">      headers: response_header,</span><br><span class="line">    &#125;)</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">      return new Response(`&#123;&quot;status&quot;:200,&quot;key&quot;:&quot;: Error:Reach the KV write limitation.&quot;&#125;`, &#123;</span><br><span class="line">      headers: response_header,</span><br><span class="line">    &#125;)&#125;</span><br><span class="line">  &#125;else if(request.method === &quot;OPTIONS&quot;)&#123;  </span><br><span class="line">      return new Response(``, &#123;</span><br><span class="line">      headers: response_header,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const requestURL = new URL(request.url)</span><br><span class="line">  const path = requestURL.pathname.split(&quot;/&quot;)[1]</span><br><span class="line">  console.log(path)</span><br><span class="line">  if(!path)&#123;</span><br><span class="line"></span><br><span class="line">    const html= await fetch(&quot;https://raw.githubusercontent.com/cycxtIT/shorturl/main/run4.html&quot;)</span><br><span class="line">    </span><br><span class="line">    return new Response(await html.text(), &#123;</span><br><span class="line">    headers: &#123;</span><br><span class="line">      &quot;content-type&quot;: &quot;text/html;charset=UTF-8&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  const value = await LINKS.get(path)</span><br><span class="line">  console.log(value)</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  const location = value</span><br><span class="line">  if (location) &#123;</span><br><span class="line">    if (config.no_ref==&quot;on&quot;)&#123;</span><br><span class="line">      let no_ref= await fetch(&quot;https://cycxtIT.github.io/shorturl/no-ref.html&quot;)</span><br><span class="line">      no_ref=await no_ref.text()</span><br><span class="line">      no_ref=no_ref.replace(/&#123;Replace&#125;/gm, location)</span><br><span class="line">      return new Response(no_ref, &#123;</span><br><span class="line">      headers: &#123;</span><br><span class="line">        &quot;content-type&quot;: &quot;text/html;charset=UTF-8&quot;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">      return Response.redirect(location, 302)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">  // If request not in kv, return 404</span><br><span class="line">  return new Response(html404, &#123;</span><br><span class="line">    headers: &#123;</span><br><span class="line">      &quot;content-type&quot;: &quot;text/html;charset=UTF-8&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    status: 404</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">addEventListener(&quot;fetch&quot;, async event =&gt; &#123;</span><br><span class="line">  event.respondWith(handleRequest(event.request))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>


<p>点击保存并部署,最后点击发送 如果提示 <code>200 OK</code> 就可以了  </p>
<blockquote>
<p>如果到了大约30分钟路由还没生效的话（添加路由的域名）,回到首页,点击你添加在Cloudflare的站点,点击 <code>DNS</code> ,点击添加记录,第一个格子填写 “@”,之后在电脑cmd或者termux上输入 <code>ping &#123;你的服务子域名&#125;</code> 注意:{你的服务子域名可以在编辑器的发送按钮的左边有个url,这就是你的服务子域名,之后会出现一个ip地址把ip地址填写在Ipv4的格子内,点击 “添加” 或”确定”</p>
</blockquote>
<hr>
<p>如果有任何问题可以使用<a href="https://t.me/cycy_cy">Telegram</a>联系我,如果无法联系我请使用我的Telegram[传话机器人]（<a href="https://t.me/livegramcybot%EF%BC%89">https://t.me/livegramcybot）</a></p>
]]></content>
      <tags>
        <tag>IT</tag>
        <tag>免费</tag>
        <tag>Cloudflare</tag>
        <tag>短链接生成器</tag>
      </tags>
  </entry>
</search>
